[{"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\App.tsx":"1","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\LoginPage.tsx":"2","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\entity\\Certificate.ts":"3","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\services\\QueryUrlParamHelper.ts":"4","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\entity\\Order.ts":"5","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\CouponComp.tsx":"6","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\modals\\CreateOrEditModal.tsx":"7","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\user\\UserOrdersPage.tsx":"8","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\index.tsx":"9","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\user\\BasketPage.tsx":"10","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\Interceptors.js":"11","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\admin\\CertificatesAdminPage.tsx":"12","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\MainPage.tsx":"13","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\reportWebVitals.ts":"14","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\services\\LocalStorageHelper.ts":"15","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\entity\\Purchase.ts":"16","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\RegisterPage.tsx":"17","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\Header.tsx":"18","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\modals\\ViewModal.tsx":"19","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\Pagination.tsx":"20","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\services\\AuthorizationHandleService.ts":"21","D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\Configuration.ts":"22"},{"size":1389,"mtime":1610891807739,"results":"23","hashOfConfig":"24"},{"size":6272,"mtime":1612786540516,"results":"25","hashOfConfig":"24"},{"size":2274,"mtime":1610544049112,"results":"26","hashOfConfig":"24"},{"size":593,"mtime":1610908541406,"results":"27","hashOfConfig":"24"},{"size":766,"mtime":1610896017801,"results":"28","hashOfConfig":"24"},{"size":2677,"mtime":1611619667789,"results":"29","hashOfConfig":"24"},{"size":6992,"mtime":1611623260262,"results":"30","hashOfConfig":"24"},{"size":10539,"mtime":1612786540440,"results":"31","hashOfConfig":"24"},{"size":500,"mtime":1609872681043,"results":"32","hashOfConfig":"24"},{"size":7640,"mtime":1612786540529,"results":"33","hashOfConfig":"24"},{"size":484,"mtime":1610464990525,"results":"34","hashOfConfig":"24"},{"size":24288,"mtime":1612786540587,"results":"35","hashOfConfig":"24"},{"size":14641,"mtime":1612784754816,"results":"36","hashOfConfig":"24"},{"size":425,"mtime":1609872681043,"results":"37","hashOfConfig":"24"},{"size":2736,"mtime":1611669945609,"results":"38","hashOfConfig":"24"},{"size":745,"mtime":1610896017782,"results":"39","hashOfConfig":"24"},{"size":8881,"mtime":1612786540522,"results":"40","hashOfConfig":"24"},{"size":4386,"mtime":1610880658762,"results":"41","hashOfConfig":"24"},{"size":3839,"mtime":1611619524082,"results":"42","hashOfConfig":"24"},{"size":5449,"mtime":1611577406444,"results":"43","hashOfConfig":"24"},{"size":2020,"mtime":1611669945358,"results":"44","hashOfConfig":"24"},{"size":294,"mtime":1612785063937,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"ip7nw4",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\App.tsx",["99","100"],"import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport CertificatesAdminPage from \"./pages/admin/CertificatesAdminPage\";\r\nimport './Interceptors'\r\nimport Footer from \"./components/Footer\";\r\nimport CartPage from \"./pages/user/BasketPage\";\r\nimport BasketPage from \"./pages/user/BasketPage\";\r\nimport UserOrdersPage from \"./pages/user/UserOrdersPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Route exact path=\"/\">\r\n                    <MainPage/>\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    <LoginPage/>\r\n                </Route>\r\n                <Route exact path={'/admin/certificates'}>\r\n                    <CertificatesAdminPage/>\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <RegisterPage/>\r\n                </Route>\r\n                <Route exact path=\"/basket\">\r\n                    <BasketPage/>\r\n                </Route>\r\n                <Route exact path=\"/orders\">\r\n                    <UserOrdersPage/>\r\n                </Route>\r\n            </BrowserRouter>\r\n            {/*<Footer/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["101","102"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\LoginPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\entity\\Certificate.ts",[],["103","104"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\services\\QueryUrlParamHelper.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\entity\\Order.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\CouponComp.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\modals\\CreateOrEditModal.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\user\\UserOrdersPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\index.tsx",[],["105","106"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\user\\BasketPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\Interceptors.js",[],["107","108"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\admin\\CertificatesAdminPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\MainPage.tsx",["109"],"import React, {Component} from \"react\";\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Certificate from \"../entity/Certificate\";\r\nimport Header from \"../components/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport '../styles/main-page.css'\r\nimport QueryUrlParamHelper from \"../services/QueryUrlParamHelper\";\r\nimport {log} from \"util\";\r\nimport {config} from \"../Configuration\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    items: Certificate[];\r\n\r\n    tagNames: string[];\r\n    sort?: string;\r\n\r\n    partName: string;\r\n    partDescription: string;\r\n    displayFilters: boolean;\r\n    pageSize: number;\r\n    pageNumber: number;\r\n\r\n    itemCount: number;\r\n    totalPageCount: number;\r\n}\r\n\r\n\r\nclass MainPage extends Component<IProps, IState> {\r\n    private readonly LAST_UPDATE_SORT = 'LAST_UPDATE:desc';\r\n    private readonly NAME_SORT = 'NAME:asc';\r\n    private readonly DEFAULT_PAGE_SIZE = 5;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = ({\r\n            items: [],\r\n            displayFilters: false,\r\n            partName: '',\r\n            partDescription: '',\r\n            itemCount: LocalStorageHelper.calcItemCount(),\r\n            pageNumber: 1,\r\n            pageSize: this.DEFAULT_PAGE_SIZE,\r\n            totalPageCount: 1000,\r\n            tagNames: [],\r\n            sort: this.LAST_UPDATE_SORT\r\n        })\r\n        console.log('before build search')\r\n    }\r\n\r\n    private buildSearch(location: string) {\r\n        const query = new URLSearchParams(location);\r\n        let tagNames = query.get('tagNames');\r\n        if (tagNames) {\r\n            this.setState({tagNames: tagNames.split(',')})\r\n        }\r\n        let pageSize = query.get('pageSize');\r\n        if (pageSize) {\r\n            this.saveSetPageSize(pageSize);\r\n        }\r\n        let pageNumber = query.get('pageNumber');\r\n        if (pageNumber) {\r\n            console.log('pageNumber exists!!!')\r\n            this.saveSetPageNumber(pageNumber);\r\n        }\r\n        let partName = query.get('partName');\r\n        console.log('partName in buildSearch = ' + partName)\r\n        if (partName) {\r\n            this.setState({partName: partName})\r\n        }\r\n        let partDescription = query.get('partDescription');\r\n        if (partDescription) {\r\n            this.setState({partDescription: partDescription})\r\n        }\r\n        let sort = query.get('sort');\r\n        if (sort) {\r\n            this.saveSetSort(sort);\r\n        }\r\n    }\r\n\r\n\r\n    private saveSetSort(sort: string) {\r\n        if (sort === this.NAME_SORT || sort === this.LAST_UPDATE_SORT) {\r\n            this.setState({sort: sort})\r\n        } else {\r\n            this.setState({sort: this.LAST_UPDATE_SORT})\r\n        }\r\n\r\n    }\r\n\r\n    private saveSetPageNumber(pageNumber: string) {\r\n        let ps = Number.parseInt(pageNumber);\r\n        console.log('ps = ', ps);\r\n        if (!isNaN(ps) && ps > 1) {\r\n            console.log('pageNumber exists and set!!!')\r\n            this.setState({pageNumber: ps})\r\n        } else {\r\n            this.setState({pageNumber: 1})\r\n        }\r\n    }\r\n\r\n    private saveSetPageSize(pageSize: string) {\r\n        let ps = Number.parseInt(pageSize);\r\n        if (!isNaN(ps) && ps > 1) {\r\n            this.setState({pageSize: ps})\r\n        } else {\r\n            this.setState({pageSize: this.DEFAULT_PAGE_SIZE})\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.buildSearch(this.props.location.search);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"pageNumber = \", this.state.pageNumber);\r\n        // this.loadResources(this.props.location.search);\r\n        this.filter();\r\n    }\r\n\r\n\r\n    private loadResources(location: string) {\r\n        const endpoint = config.url.urlApi + \"certificates\" + location;\r\n        console.log(\"loadResources, location = \" + location);\r\n\r\n        axios.get(endpoint).then(res => {\r\n            let data = res.data.items;\r\n            let totalPageCount = res.data.totalPageCount;\r\n            console.log(\"data = \" + data)\r\n            console.log(\"totalPageCount = \" + totalPageCount)\r\n            let list: Certificate[] = Certificate.parseCertificateList(data);\r\n            this.setState({items: list, totalPageCount: totalPageCount});\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.loadResources(location),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    handleAddTag = (chip) => {\r\n        this.setState(prev => ({\r\n            tagNames: [...prev.tagNames, chip]\r\n        }));\r\n    }\r\n    handleDeleteTag = (chip) => {\r\n        this.setState({\r\n            tagNames: this.state.tagNames.filter((e) => e !== chip)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Header cartItems={this.state.itemCount}/>\r\n                <div className={'container my-3 pt-5 text-center'}>\r\n                    {\r\n                        this.state.displayFilters ?\r\n                            <button className={'btn btn-primary'} onClick={() => this.toggleFilter()}>Hide\r\n                                filters</button>\r\n                            :\r\n                            <button className={'btn btn-primary'} onClick={() => this.toggleFilter()}>Show\r\n                                Filters</button>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.state.displayFilters &&\r\n                    <div className={'d-flex justify-content-center'}>\r\n                        <div className={'form__container mx-5 mb-5 w-50 text-center'}>\r\n                            <div className={'row text-center'}>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" id=\"partName\"\r\n                                           value={this.state.partName}\r\n                                           onChange={event => this.setState({partName: event.target.value})}/>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter description\"\r\n                                           id=\"partDescription\" value={this.state.partDescription}\r\n                                           onChange={event => this.setState({partDescription: event.target.value})}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group text-center row\">\r\n                                <div className={'col-6 text-left chip__array'}>\r\n                                    <ChipInput\r\n                                        label={'Tags'}\r\n                                        value={this.state.tagNames}\r\n                                        onAdd={chip => this.handleAddTag(chip)}\r\n                                        onDelete={chip => this.handleDeleteTag(chip)}/>\r\n                                </div>\r\n                                <div className={'col-6 text-center'}>\r\n                                    <div className={'radio text-left'}>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"sort\"\r\n                                                   id=\"exampleRadios1\" value=\"LAST_UPDATE:desc\"\r\n                                                   checked={this.state.sort === this.LAST_UPDATE_SORT}\r\n                                                   onChange={() => this.setState({sort: this.LAST_UPDATE_SORT})}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                                Sort by last update\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"sort\"\r\n                                                   id=\"exampleRadios2\" value=\"NAME:asc\"\r\n                                                   checked={this.state.sort === this.NAME_SORT}\r\n                                                   onChange={() => this.setState({sort: this.NAME_SORT})}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                                Sort by name\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={() => this.filter()} className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <main className={'main-page'}>\r\n                    <div className=\"coupon_list\">\r\n                        {\r\n                            this.state.items && this.state.items.map((el, i) => (\r\n                                <div key={i} className=\"card mx-2 my-4\">\r\n                                    <h2 className=\"card-title card-header text-center\">\r\n                                        {el.name}\r\n                                    </h2>\r\n\r\n                                    <div className=\"card-body-header p-3\">\r\n                                        <p className=\"card-text\">\r\n                                            {el.description.substr(0, 100)}\r\n                                        </p>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">\r\n                                            <span>Expires in 4 days</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <span>${el.price}</span>\r\n                                            <span>\r\n                                                <button className={'btn btn-secondary'}\r\n                                                        onClick={() => this.addCard(el.id)}>Add to Cart</button>\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body text-left\">\r\n                                        {\r\n                                            el.tags.map((value, index) => (\r\n                                                <span key={index} className={'mr-1'}>\r\n                                                    <Link to={'/?tagNames=' + value}\r\n                                                          onClick={() => this.setState({\r\n                                                                  tagNames: [value],\r\n                                                                  partName: '',\r\n                                                                  partDescription: '',\r\n                                                                  sort: this.LAST_UPDATE_SORT,\r\n                                                                  pageNumber: 1\r\n                                                              },\r\n                                                              () => this.filter())}>\r\n                                                        #{value}\r\n                                                    </Link>\r\n                                                </span>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </main>\r\n\r\n                <Pagination pageNumber={this.state.pageNumber} pageSize={this.state.pageSize}\r\n                            totalPageCount={this.state.totalPageCount}\r\n                            onClickPagination={(event, input) => this.onClickPagination(event, input)}\r\n                            changePageSize={(event) => this.changePageSize(event)}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private changePageSize(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState(() => (({pageNumber: 1, pageSize: Number.parseInt(event.target.value)})),\r\n            () => this.filter());\r\n    }\r\n\r\n    private filter() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partName, 'partName');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partDescription, 'partDescription');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageNumber, 'pageNumber');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageSize, 'pageSize');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.sort, 'sort');\r\n        QueryUrlParamHelper.setParamQueryArray(query, this.state.tagNames, 'tagNames');\r\n        let path = \"?\" + query.toString();\r\n        this.props.history.replace(path);\r\n        this.loadResources(path);\r\n        this.buildSearch(path);\r\n    }\r\n\r\n\r\n    private addCard(id: number) {\r\n        LocalStorageHelper.putItemBasket(id);\r\n        this.setState({itemCount: LocalStorageHelper.calcItemCount()})\r\n    }\r\n\r\n    private toggleFilter(): void {\r\n        this.setState(prevState => ({\r\n            displayFilters: !prevState.displayFilters\r\n        }));\r\n    }\r\n\r\n    private onClickPagination(event: React.MouseEvent<HTMLAnchorElement>, input: number) {\r\n        event.preventDefault();\r\n        console.log(\"onclick pagination = \" + input)\r\n        this.setState({pageNumber: input}, () => this.filter());\r\n    }\r\n}\r\n\r\nexport default withRouter(MainPage);",["110","111"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\reportWebVitals.ts",[],["112","113"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\services\\LocalStorageHelper.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\entity\\Purchase.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\pages\\RegisterPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\Header.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\modals\\ViewModal.tsx",[],["114","115"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\components\\Pagination.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\services\\AuthorizationHandleService.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\react-runner\\frontend\\src\\Configuration.ts",[],{"ruleId":"116","severity":1,"message":"117","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":16},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"121","replacedBy":"127"},{"ruleId":"123","replacedBy":"128"},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","replacedBy":"130"},{"ruleId":"116","severity":1,"message":"131","line":13,"column":9,"nodeType":"118","messageId":"119","endLine":13,"endColumn":12},{"ruleId":"121","replacedBy":"132"},{"ruleId":"123","replacedBy":"133"},{"ruleId":"121","replacedBy":"134"},{"ruleId":"123","replacedBy":"135"},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","replacedBy":"137"},"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'CartPage' is defined but never used.","no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],["138"],["139"],"'log' is defined but never used.",["138"],["139"],["138"],["139"],["138"],["139"],"no-global-assign","no-unsafe-negation"],"'log' is defined but never used.",["138"],["139"],["138"],["139"],"no-global-assign","no-unsafe-negation"].","Identifier","unusedVar","'CartPage' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],["142"],["143"],["142"],["143"],["142"],["143"],"'log' is defined but never used.",["142"],["143"],["142"],["143"],"no-global-assign","no-unsafe-negation"]