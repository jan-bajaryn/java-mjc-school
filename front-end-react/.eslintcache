[{"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\reportWebVitals.ts":"1","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\App.tsx":"2","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\index.tsx":"3","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Header.tsx":"4","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\MainPage.tsx":"5","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\LoginPage.tsx":"6","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\RegisterPage.tsx":"7","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Certificate.ts":"8","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\admin\\CertificatesAdminPage.tsx":"9","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\Interceptors.js":"10","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Pagination.tsx":"11","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\AuthorizationHandleService.ts":"12","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\LocalStorageHelper.ts":"13","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Footer.tsx":"14","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\BasketPage.tsx":"15","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\CouponComp.tsx":"16","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\RefExtractor.tsx":"17","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\UserOrdersPage.tsx":"18","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Order.ts":"19","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Purchase.ts":"20"},{"size":425,"mtime":1609872681043,"results":"21","hashOfConfig":"22"},{"size":1219,"mtime":1610832643562,"results":"23","hashOfConfig":"22"},{"size":500,"mtime":1609872681043,"results":"24","hashOfConfig":"22"},{"size":4386,"mtime":1610880658762,"results":"25","hashOfConfig":"22"},{"size":17474,"mtime":1610846872058,"results":"26","hashOfConfig":"22"},{"size":6220,"mtime":1610622257202,"results":"27","hashOfConfig":"22"},{"size":8946,"mtime":1610621724967,"results":"28","hashOfConfig":"22"},{"size":2274,"mtime":1610544049113,"results":"29","hashOfConfig":"22"},{"size":29406,"mtime":1610898931511,"results":"30","hashOfConfig":"22"},{"size":484,"mtime":1610464990526,"results":"31","hashOfConfig":"22"},{"size":5449,"mtime":1610573643281,"results":"32","hashOfConfig":"22"},{"size":2006,"mtime":1610622257194,"results":"33","hashOfConfig":"22"},{"size":2282,"mtime":1610846565164,"results":"34","hashOfConfig":"22"},{"size":339,"mtime":1610639064811,"results":"35","hashOfConfig":"22"},{"size":7218,"mtime":1610897276074,"results":"36","hashOfConfig":"22"},{"size":2673,"mtime":1610845470462,"results":"37","hashOfConfig":"22"},{"size":239,"mtime":1610621365607,"results":"38","hashOfConfig":"22"},{"size":4081,"mtime":1610899200726,"results":"39","hashOfConfig":"22"},{"size":732,"mtime":1610895742294,"results":"40","hashOfConfig":"22"},{"size":730,"mtime":1610895934691,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"16vc62k",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\reportWebVitals.ts",[],["90","91"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\App.tsx",["92","93"],"import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport CertificatesAdminPage from \"./pages/admin/CertificatesAdminPage\";\r\nimport './Interceptors'\r\nimport Footer from \"./components/Footer\";\r\nimport CartPage from \"./pages/user/BasketPage\";\r\nimport BasketPage from \"./pages/user/BasketPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Route exact path=\"/\">\r\n                    <MainPage/>\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    <LoginPage/>\r\n                </Route>\r\n                <Route exact path={'/admin/certificates'}>\r\n                    <CertificatesAdminPage/>\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <RegisterPage/>\r\n                </Route>\r\n                <Route exact path=\"/basket\">\r\n                    <BasketPage/>\r\n                </Route>\r\n            </BrowserRouter>\r\n            {/*<Footer/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\index.tsx",[],["94","95"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Header.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\MainPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\LoginPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\RegisterPage.tsx",["96"],"import React, {Component, RefObject} from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport '../styles/register.css'\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from \"../components/Header\";\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport RefExtractor from \"../services/RefExtractor\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    bad_username: boolean;\r\n    bad_password: boolean;\r\n    bad_name: boolean;\r\n    bad_repeat_password: boolean;\r\n    err_msg?: string\r\n}\r\n\r\n\r\nclass RegisterPage extends Component<IProps, IState> {\r\n\r\n    private username = React.createRef<HTMLInputElement>();\r\n    private password = React.createRef<HTMLInputElement>();\r\n    private repeat_password = React.createRef<HTMLInputElement>();\r\n    private first_name = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            bad_name: false,\r\n            bad_password: false,\r\n            bad_username: false,\r\n            bad_repeat_password: false\r\n        }\r\n    }\r\n\r\n    private handleSubmit = async (\r\n        e: React.FormEvent<HTMLFormElement>\r\n    ): Promise<void> => {\r\n        e.preventDefault();\r\n        const endpoint = \"http://localhost:8080/users\";\r\n\r\n        let username: string = RefExtractor.exctractRef(this.username);\r\n        let password: string = RefExtractor.exctractRef(this.password);\r\n        let repeat_password: string = RefExtractor.exctractRef(this.repeat_password);\r\n        let first_name: string = RefExtractor.exctractRef(this.first_name);\r\n\r\n        if (!this.isFormValid(username, password, repeat_password, first_name)) {\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            username: username,\r\n            password: password,\r\n            firstName: first_name\r\n        }\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            this.props.history.push(\"/login\");\r\n        }).catch((error) => {\r\n            if (error.response.data.errorCode === '40026') {\r\n                this.setState({err_msg: 'User with so username already exists'})\r\n            }\r\n            if (error.response.data.errorCode === '40019') {\r\n                this.setState({err_msg: error.response.data.message})\r\n            }\r\n            console.log(\"login error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.handleSubmit(e),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n\r\n    };\r\n\r\n    private isFormValid(username: string, password: string, repeat_password: string, first_name: string): boolean {\r\n        let result = true;\r\n        if (!username || username === '' || username.length < 3 || username.length > 30) {\r\n            this.setState({bad_username: true})\r\n            result = false;\r\n        }\r\n\r\n        if (!password || password === '' || password.length < 4 || password.length > 30) {\r\n            this.setState({bad_password: true});\r\n            result = false;\r\n        }\r\n        if (!repeat_password || repeat_password === '' || password !== repeat_password) {\r\n            this.setState({bad_repeat_password: true});\r\n            result = false;\r\n        }\r\n        if (first_name && (/\\s/.test(first_name) || first_name.length > 30)) {\r\n            this.setState({bad_name: true});\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header cartItems={LocalStorageHelper.calcItemCount()}/>\r\n                <main className={'mt-5 pt-5 register_container'}>\r\n                    <div className=\"register_container\">\r\n                        <div className=\"logo_container\">\r\n                            <span>Register</span>\r\n                        </div>\r\n                        {\r\n                            this.state.err_msg &&\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {this.state.err_msg}\r\n                            </div>\r\n                        }\r\n                        <div className=\"inputs_container\">\r\n                            <form onSubmit={this.handleSubmit} noValidate={true}>\r\n                                <div className=\"first_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"login_name\">Login Name</label>\r\n                                        {\r\n                                            this.state.bad_username ?\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_username: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        {\r\n                                            this.state.bad_password ?\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"second_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"first_name\">First Name</label>\r\n                                        {\r\n                                            this.state.bad_name ?\r\n                                                <input type=\"text\" id=\"first_name\" ref={this.first_name}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_name: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"first_name\" ref={this.first_name}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"repeat_password\">Repeat Password</label>\r\n                                        {\r\n                                            this.state.bad_repeat_password ?\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_repeat_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <div className=\"btn_holder\">\r\n                                            <button className=\"transparent_bg\" type={'reset'}>Cancel</button>\r\n                                            <button className=\"green_bg\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPage);",["97","98"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Certificate.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\admin\\CertificatesAdminPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\Interceptors.js",[],["99","100"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Pagination.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\AuthorizationHandleService.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\LocalStorageHelper.ts",["101"],"export default class LocalStorageHelper {\r\n    static calcItemCount() {\r\n        let basket = this.getBasket();\r\n        return Array.from(this.getBasket().values())\r\n            .reduce((previousValue, currentValue) => previousValue + currentValue, 0)\r\n        // return 1;\r\n        // return 0;\r\n    }\r\n\r\n    static putItemBasket(id: number) {\r\n        let basket = this.getBasket();\r\n        let current = basket.get(id);\r\n        if (current) {\r\n            basket.set(id, current + 1);\r\n        } else {\r\n            basket.set(id, 1);\r\n        }\r\n        this.saveBasket(basket);\r\n    }\r\n\r\n    static removeItemBasket(id: number) {\r\n        let basket = this.getBasket();\r\n        let current = basket.get(id);\r\n        if (current) {\r\n            let newCount = current - 1;\r\n            if (newCount < 1) {\r\n                basket.delete(id);\r\n            } else {\r\n                basket.set(id, newCount);\r\n            }\r\n            this.saveBasket(basket);\r\n        }\r\n    }\r\n\r\n    private static saveBasket(map: Map<number, number>) {\r\n        console.log('save basket = ', JSON.stringify(Array.from(map.entries())));\r\n        localStorage.setItem('cart', JSON.stringify(Array.from(map.entries())));\r\n    }\r\n\r\n    static logout() {\r\n        localStorage.removeItem(\"authorization\");\r\n        localStorage.removeItem(\"refresh_token\");\r\n        localStorage.removeItem(\"role\");\r\n        localStorage.removeItem(\"userId\");\r\n        localStorage.removeItem(\"username\");\r\n    }\r\n\r\n    static login(access_token, refresh_token, role, id, username) {\r\n        localStorage.setItem(\"authorization\", access_token);\r\n        localStorage.setItem(\"refresh_token\", refresh_token);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"userId\", id);\r\n        localStorage.setItem(\"username\", username);\r\n    }\r\n\r\n    static isLogged(): boolean {\r\n        return localStorage.getItem('authorization') !== null;\r\n    }\r\n\r\n    static getBasket(): Map<number, number> {\r\n        let item = localStorage.getItem('cart');\r\n        return item === null ? new Map([]) : new Map(JSON.parse(item));\r\n    }\r\n\r\n    static getUserId() {\r\n        return localStorage.getItem('userId');\r\n    }\r\n\r\n    static clearBasket() {\r\n        localStorage.removeItem('cart');\r\n    }\r\n}","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Footer.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\BasketPage.tsx",["102"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\CouponComp.tsx",["103"],"import React, {Component} from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport Certificate from \"../entity/Certificate\";\r\n\r\n\r\ninterface IProps {\r\n    certificate: Certificate;\r\n    size: number;\r\n    onMinus: any;\r\n    onPlus: any;\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport default class CouponComp extends Component<IProps, IState> {\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.certificate) {\r\n            return (\r\n                <div className=\"coupon row mb-3\">\r\n                    <div className=\"details col-8\">\r\n                        <div className=\"coupon_name\">{this.props.certificate.name}</div>\r\n                        <div className=\"coupon_description\">{this.props.certificate.description.substr(0, 100)}</div>\r\n                    </div>\r\n                    <div className={'row col-4'}>\r\n                        <div className={'minus__plus d-flex align-items-center mr-5 justify-content-end'}>\r\n                            <button className={'btn btn-outline-secondary'}\r\n                                    onClick={() => this.props.onMinus()}>\r\n                                -\r\n                            </button>\r\n                            <span className={'mx-2'}>{this.props.size}</span>\r\n                            <button className={'btn btn-outline-secondary'}\r\n                                    onClick={() => this.props.onPlus()}>\r\n                                +\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            <div className=\"price\">${this.props.certificate.price * this.props.size}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"coupon\">\r\n                    <div className=\"details\">\r\n                        <div className=\"coupon_name\"/>\r\n                        <div className=\"coupon_description\"/>\r\n                        <div className={'minus__plus d-flex align-items-center mr-5'}>\r\n                            <button className={'btn btn-outline-secondary'}>-</button>\r\n                            <span className={'mx-2'}>{this.props.size}</span>\r\n                            <button className={'btn btn-outline-secondary'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                        <div className=\"price\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\RefExtractor.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\UserOrdersPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Order.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Purchase.ts",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":16},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","severity":1,"message":"115","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","replacedBy":"117"},{"ruleId":"104","replacedBy":"118"},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","severity":1,"message":"120","line":3,"column":13,"nodeType":"110","messageId":"111","endLine":3,"endColumn":19},{"ruleId":"108","severity":1,"message":"121","line":10,"column":8,"nodeType":"110","messageId":"111","endLine":10,"endColumn":20},{"ruleId":"108","severity":1,"message":"122","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":28},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'CartPage' is defined but never used.",["123"],["124"],"'RefObject' is defined but never used.",["123"],["124"],["123"],["124"],"'basket' is assigned a value but never used.","'RefExtractor' is defined but never used.","'RouteComponentProps' is defined but never used.","no-global-assign","no-unsafe-negation"]