[{"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\reportWebVitals.ts":"1","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\App.tsx":"2","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\index.tsx":"3","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Header.tsx":"4","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\MainPage.tsx":"5","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\LoginPage.tsx":"6","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\RegisterPage.tsx":"7","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Certificate.ts":"8","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\admin\\CertificatesAdminPage.tsx":"9","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\Interceptors.js":"10","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Pagination.tsx":"11","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\AuthorizationHandleService.ts":"12","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\LocalStorageHelper.ts":"13","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Footer.tsx":"14","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\BasketPage.tsx":"15","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\CouponComp.tsx":"16","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\RefExtractor.tsx":"17","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\UserOrdersPage.tsx":"18","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Order.ts":"19","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Purchase.ts":"20","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\Parser.ts":"21"},{"size":425,"mtime":1609872681043,"results":"22","hashOfConfig":"23"},{"size":1389,"mtime":1610891807740,"results":"24","hashOfConfig":"23"},{"size":500,"mtime":1609872681043,"results":"25","hashOfConfig":"23"},{"size":4386,"mtime":1610880658762,"results":"26","hashOfConfig":"23"},{"size":16590,"mtime":1610908713104,"results":"27","hashOfConfig":"23"},{"size":6220,"mtime":1610622257202,"results":"28","hashOfConfig":"23"},{"size":8946,"mtime":1610621724967,"results":"29","hashOfConfig":"23"},{"size":2274,"mtime":1610544049113,"results":"30","hashOfConfig":"23"},{"size":29406,"mtime":1610898931511,"results":"31","hashOfConfig":"23"},{"size":484,"mtime":1610464990526,"results":"32","hashOfConfig":"23"},{"size":5449,"mtime":1610573643281,"results":"33","hashOfConfig":"23"},{"size":2006,"mtime":1610622257194,"results":"34","hashOfConfig":"23"},{"size":2376,"mtime":1610893901210,"results":"35","hashOfConfig":"23"},{"size":339,"mtime":1610639064811,"results":"36","hashOfConfig":"23"},{"size":7218,"mtime":1610897276074,"results":"37","hashOfConfig":"23"},{"size":2673,"mtime":1610845470462,"results":"38","hashOfConfig":"23"},{"size":239,"mtime":1610621365607,"results":"39","hashOfConfig":"23"},{"size":5446,"mtime":1610907599328,"results":"40","hashOfConfig":"23"},{"size":766,"mtime":1610896017802,"results":"41","hashOfConfig":"23"},{"size":745,"mtime":1610896017783,"results":"42","hashOfConfig":"23"},{"size":224,"mtime":1610898783096,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"16vc62k",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\reportWebVitals.ts",[],["93","94"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\App.tsx",["95","96"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\index.tsx",[],["97","98"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Header.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\MainPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\LoginPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\RegisterPage.tsx",["99"],"import React, {Component, RefObject} from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport '../styles/register.css'\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from \"../components/Header\";\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport RefExtractor from \"../services/RefExtractor\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    bad_username: boolean;\r\n    bad_password: boolean;\r\n    bad_name: boolean;\r\n    bad_repeat_password: boolean;\r\n    err_msg?: string\r\n}\r\n\r\n\r\nclass RegisterPage extends Component<IProps, IState> {\r\n\r\n    private username = React.createRef<HTMLInputElement>();\r\n    private password = React.createRef<HTMLInputElement>();\r\n    private repeat_password = React.createRef<HTMLInputElement>();\r\n    private first_name = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            bad_name: false,\r\n            bad_password: false,\r\n            bad_username: false,\r\n            bad_repeat_password: false\r\n        }\r\n    }\r\n\r\n    private handleSubmit = async (\r\n        e: React.FormEvent<HTMLFormElement>\r\n    ): Promise<void> => {\r\n        e.preventDefault();\r\n        const endpoint = \"http://localhost:8080/users\";\r\n\r\n        let username: string = RefExtractor.exctractRef(this.username);\r\n        let password: string = RefExtractor.exctractRef(this.password);\r\n        let repeat_password: string = RefExtractor.exctractRef(this.repeat_password);\r\n        let first_name: string = RefExtractor.exctractRef(this.first_name);\r\n\r\n        if (!this.isFormValid(username, password, repeat_password, first_name)) {\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            username: username,\r\n            password: password,\r\n            firstName: first_name\r\n        }\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            this.props.history.push(\"/login\");\r\n        }).catch((error) => {\r\n            if (error.response.data.errorCode === '40026') {\r\n                this.setState({err_msg: 'User with so username already exists'})\r\n            }\r\n            if (error.response.data.errorCode === '40019') {\r\n                this.setState({err_msg: error.response.data.message})\r\n            }\r\n            console.log(\"login error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.handleSubmit(e),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n\r\n    };\r\n\r\n    private isFormValid(username: string, password: string, repeat_password: string, first_name: string): boolean {\r\n        let result = true;\r\n        if (!username || username === '' || username.length < 3 || username.length > 30) {\r\n            this.setState({bad_username: true})\r\n            result = false;\r\n        }\r\n\r\n        if (!password || password === '' || password.length < 4 || password.length > 30) {\r\n            this.setState({bad_password: true});\r\n            result = false;\r\n        }\r\n        if (!repeat_password || repeat_password === '' || password !== repeat_password) {\r\n            this.setState({bad_repeat_password: true});\r\n            result = false;\r\n        }\r\n        if (first_name && (/\\s/.test(first_name) || first_name.length > 30)) {\r\n            this.setState({bad_name: true});\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header cartItems={LocalStorageHelper.calcItemCount()}/>\r\n                <main className={'mt-5 pt-5 register_container'}>\r\n                    <div className=\"register_container\">\r\n                        <div className=\"logo_container\">\r\n                            <span>Register</span>\r\n                        </div>\r\n                        {\r\n                            this.state.err_msg &&\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {this.state.err_msg}\r\n                            </div>\r\n                        }\r\n                        <div className=\"inputs_container\">\r\n                            <form onSubmit={this.handleSubmit} noValidate={true}>\r\n                                <div className=\"first_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"login_name\">Login Name</label>\r\n                                        {\r\n                                            this.state.bad_username ?\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_username: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        {\r\n                                            this.state.bad_password ?\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"second_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"first_name\">First Name</label>\r\n                                        {\r\n                                            this.state.bad_name ?\r\n                                                <input type=\"text\" id=\"first_name\" ref={this.first_name}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_name: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"first_name\" ref={this.first_name}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"repeat_password\">Repeat Password</label>\r\n                                        {\r\n                                            this.state.bad_repeat_password ?\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_repeat_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <div className=\"btn_holder\">\r\n                                            <button className=\"transparent_bg\" type={'reset'}>Cancel</button>\r\n                                            <button className=\"green_bg\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPage);",["100","101"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Certificate.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\admin\\CertificatesAdminPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\Interceptors.js",[],["102","103"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Pagination.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\AuthorizationHandleService.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\LocalStorageHelper.ts",["104"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Footer.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\BasketPage.tsx",["105"],"import React, {Component} from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport '../../styles/checkout.css'\r\nimport Certificate from \"../../entity/Certificate\";\r\nimport LocalStorageHelper from \"../../services/LocalStorageHelper\";\r\nimport CouponComp from \"../../components/CouponComp\";\r\nimport axios from \"axios\";\r\nimport AuthorizationHandleService from \"../../services/AuthorizationHandleService\";\r\nimport RefExtractor from \"../../services/RefExtractor\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    // coupons: Map<number, number>;\r\n    coupons: Map<Certificate, number>;\r\n}\r\n\r\n\r\nclass BasketPage extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            coupons: new Map([])\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let basket = Array.from(LocalStorageHelper.getBasket().entries())\r\n        console.log('basket comp did mount = ' + JSON.stringify(basket))\r\n        let resultBasket: Map<Certificate, number> = new Map([]);\r\n        for (let i = 0; i < basket.length; i++) {\r\n            await this.buildItem(resultBasket, basket[i][0], basket[i][1]);\r\n        }\r\n        this.setState({coupons: resultBasket})\r\n        console.log(\"resultBasket = \" + JSON.stringify(Array.from(resultBasket.entries())))\r\n    }\r\n\r\n    async buildItem(resultBasket: Map<Certificate, number>, id: number, size: number) {\r\n        const endpoint = \"http://localhost:8080/certificates/\" + id;\r\n        await axios.get(endpoint).then(res => {\r\n            let data = res.data;\r\n            resultBasket.set(Certificate.parse(data), size)\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.buildItem(resultBasket, id, size),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className={'mt-5 pt-2'}/>\r\n                <div className=\"header_line\">\r\n                    <span>\r\n                        Basket\r\n                    </span>\r\n                </div>\r\n\r\n                <main className={'checkout'}>\r\n                    <div className=\"main_container\">\r\n                        <div className=\"coupons mt-5\">\r\n\r\n                            {\r\n                                this.state.coupons.size === 0 &&\r\n                                <h1 className={'container my-5 py-5'}>\r\n                                    You have not certificates in your basket\r\n                                </h1>\r\n                            }\r\n\r\n                            {\r\n                                Array.from(this.state.coupons.entries()).map((value, index) => (\r\n                                    <CouponComp key={index} certificate={value[0]} size={value[1]}\r\n                                                onMinus={() => this.onMinus(value)}\r\n                                                onPlus={() => this.onPlus(value)}/>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"line\"/>\r\n                        <div className=\"total_container\">\r\n                            <div className=\"total\">\r\n                                <span>Total</span>\r\n                                <span>${\r\n                                    Array.from(this.state.coupons.entries())\r\n                                        .map(value => value[0].price * value[1])\r\n                                        .reduce((p, c) => p + c, 0)\r\n                                }</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn_container\">\r\n                            <div className=\"btn_place\">\r\n                                <button className=\"btn transparent_bg\"\r\n                                        onClick={() => {\r\n                                            this.props.history.push('/');\r\n                                        }}>\r\n                                    Back\r\n                                </button>\r\n                                {\r\n                                    this.state.coupons.size === 0 ?\r\n                                        <button className=\"btn green_bg disabled\">\r\n                                            Save\r\n                                        </button>\r\n                                        :\r\n                                        <button className=\"btn green_bg\" onClick={() => this.onFormSubmit()}>\r\n                                            Save\r\n                                        </button>\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private onMinus(value: [Certificate, number]) {\r\n        LocalStorageHelper.removeItemBasket(value[0].id);\r\n        let copyMap = new Map(this.state.coupons.entries());\r\n        if (value[1] - 1 < 1) {\r\n            copyMap.delete(value[0])\r\n            this.setState({coupons: copyMap});\r\n        } else {\r\n            copyMap.set(value[0], value[1] - 1)\r\n            this.setState({\r\n                coupons: copyMap\r\n            });\r\n        }\r\n    }\r\n\r\n    private onPlus(value: [Certificate, number]) {\r\n        LocalStorageHelper.putItemBasket(value[0].id);\r\n        let copyMap = new Map(this.state.coupons.entries());\r\n        copyMap.set(value[0], value[1] + 1)\r\n        this.setState({\r\n            coupons: copyMap\r\n        })\r\n    }\r\n\r\n    private onFormSubmit() {\r\n        const endpoint = \"http://localhost:8080/orders\";\r\n\r\n\r\n        let retCerts = Array.from(this.state.coupons.entries())\r\n            .map(value => {\r\n                return {\r\n                    id: value[0].id,\r\n                    count: value[1]\r\n                }\r\n            });\r\n        let role = LocalStorageHelper.getRole();\r\n        let data\r\n        if (role === 'ADMIN') {\r\n            data = {\r\n                userId: LocalStorageHelper.getUserId(),\r\n                giftCertificates: retCerts,\r\n            }\r\n        } else if (role === 'USER') {\r\n            data = {\r\n                giftCertificates: retCerts,\r\n            }\r\n        } else {\r\n            this.props.history.push('/login');\r\n            return;\r\n        }\r\n\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            LocalStorageHelper.clearBasket();\r\n            this.props.history.push(\"/orders\");\r\n        }).catch((error) => {\r\n            if (error.response.data.errorCode === '40128') {\r\n                this.props.history.push('/login');\r\n            }\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.onFormSubmit(),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default withRouter(BasketPage);\r\n","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\CouponComp.tsx",["106"],"import React, {Component} from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport Certificate from \"../entity/Certificate\";\r\n\r\n\r\ninterface IProps {\r\n    certificate: Certificate;\r\n    size: number;\r\n    onMinus: any;\r\n    onPlus: any;\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport default class CouponComp extends Component<IProps, IState> {\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.certificate) {\r\n            return (\r\n                <div className=\"coupon row mb-3\">\r\n                    <div className=\"details col-8\">\r\n                        <div className=\"coupon_name\">{this.props.certificate.name}</div>\r\n                        <div className=\"coupon_description\">{this.props.certificate.description.substr(0, 100)}</div>\r\n                    </div>\r\n                    <div className={'row col-4'}>\r\n                        <div className={'minus__plus d-flex align-items-center mr-5 justify-content-end'}>\r\n                            <button className={'btn btn-outline-secondary'}\r\n                                    onClick={() => this.props.onMinus()}>\r\n                                -\r\n                            </button>\r\n                            <span className={'mx-2'}>{this.props.size}</span>\r\n                            <button className={'btn btn-outline-secondary'}\r\n                                    onClick={() => this.props.onPlus()}>\r\n                                +\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            <div className=\"price\">${this.props.certificate.price * this.props.size}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"coupon\">\r\n                    <div className=\"details\">\r\n                        <div className=\"coupon_name\"/>\r\n                        <div className=\"coupon_description\"/>\r\n                        <div className={'minus__plus d-flex align-items-center mr-5'}>\r\n                            <button className={'btn btn-outline-secondary'}>-</button>\r\n                            <span className={'mx-2'}>{this.props.size}</span>\r\n                            <button className={'btn btn-outline-secondary'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                        <div className=\"price\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\RefExtractor.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\UserOrdersPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Order.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Purchase.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\Parser.ts",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","severity":1,"message":"118","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","severity":1,"message":"123","line":3,"column":13,"nodeType":"113","messageId":"114","endLine":3,"endColumn":19},{"ruleId":"111","severity":1,"message":"124","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":20},{"ruleId":"111","severity":1,"message":"125","line":2,"column":9,"nodeType":"113","messageId":"114","endLine":2,"endColumn":28},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'CartPage' is defined but never used.",["126"],["127"],"'RefObject' is defined but never used.",["126"],["127"],["126"],["127"],"'basket' is assigned a value but never used.","'RefExtractor' is defined but never used.","'RouteComponentProps' is defined but never used.","no-global-assign","no-unsafe-negation"]