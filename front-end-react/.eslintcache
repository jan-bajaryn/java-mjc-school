[{"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\reportWebVitals.ts":"1","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\App.tsx":"2","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\index.tsx":"3","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Header.tsx":"4","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\MainPage.tsx":"5","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\LoginPage.tsx":"6","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\RegisterPage.tsx":"7","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Certificate.ts":"8","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\admin\\CertificatesAdminPage.tsx":"9","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\Interceptors.js":"10","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Pagination.tsx":"11","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\AuthorizationHandleService.ts":"12","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\LocalStorageHelper.ts":"13","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Footer.tsx":"14","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\BasketPage.tsx":"15","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\CouponComp.tsx":"16","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\RefExtractor.tsx":"17","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\UserOrdersPage.tsx":"18","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Order.ts":"19","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Purchase.ts":"20","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\Parser.ts":"21"},{"size":425,"mtime":1609872681043,"results":"22","hashOfConfig":"23"},{"size":1389,"mtime":1610891807740,"results":"24","hashOfConfig":"23"},{"size":500,"mtime":1609872681043,"results":"25","hashOfConfig":"23"},{"size":4386,"mtime":1610880658762,"results":"26","hashOfConfig":"23"},{"size":13406,"mtime":1610920107119,"results":"27","hashOfConfig":"23"},{"size":6220,"mtime":1610622257202,"results":"28","hashOfConfig":"23"},{"size":8945,"mtime":1610972587332,"results":"29","hashOfConfig":"23"},{"size":2274,"mtime":1610544049113,"results":"30","hashOfConfig":"23"},{"size":26125,"mtime":1611617761781,"results":"31","hashOfConfig":"23"},{"size":484,"mtime":1610464990526,"results":"32","hashOfConfig":"23"},{"size":5449,"mtime":1611577406445,"results":"33","hashOfConfig":"23"},{"size":2006,"mtime":1610622257194,"results":"34","hashOfConfig":"23"},{"size":2376,"mtime":1610893901210,"results":"35","hashOfConfig":"23"},{"size":339,"mtime":1610639064811,"results":"36","hashOfConfig":"23"},{"size":7609,"mtime":1611575227389,"results":"37","hashOfConfig":"23"},{"size":2732,"mtime":1611574060508,"results":"38","hashOfConfig":"23"},{"size":239,"mtime":1610621365607,"results":"39","hashOfConfig":"23"},{"size":7563,"mtime":1611577184699,"results":"40","hashOfConfig":"23"},{"size":766,"mtime":1610896017802,"results":"41","hashOfConfig":"23"},{"size":745,"mtime":1610896017783,"results":"42","hashOfConfig":"23"},{"size":224,"mtime":1610898783096,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"16vc62k",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\reportWebVitals.ts",[],["95","96"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\App.tsx",["97","98"],"import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport CertificatesAdminPage from \"./pages/admin/CertificatesAdminPage\";\r\nimport './Interceptors'\r\nimport Footer from \"./components/Footer\";\r\nimport CartPage from \"./pages/user/BasketPage\";\r\nimport BasketPage from \"./pages/user/BasketPage\";\r\nimport UserOrdersPage from \"./pages/user/UserOrdersPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Route exact path=\"/\">\r\n                    <MainPage/>\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    <LoginPage/>\r\n                </Route>\r\n                <Route exact path={'/admin/certificates'}>\r\n                    <CertificatesAdminPage/>\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <RegisterPage/>\r\n                </Route>\r\n                <Route exact path=\"/basket\">\r\n                    <BasketPage/>\r\n                </Route>\r\n                <Route exact path=\"/orders\">\r\n                    <UserOrdersPage/>\r\n                </Route>\r\n            </BrowserRouter>\r\n            {/*<Footer/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\index.tsx",[],["99","100"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Header.tsx",[],["101","102"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\MainPage.tsx",["103"],"import React, {Component} from \"react\";\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Certificate from \"../entity/Certificate\";\r\nimport Header from \"../components/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport '../styles/main-page.css'\r\nimport QueryUrlParamHelper from \"../services/QueryUrlParamHelper\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    items: Certificate[];\r\n\r\n    tagNames: string[];\r\n    sort?: string;\r\n\r\n    partName: string;\r\n    partDescription: string;\r\n    displayFilters: boolean;\r\n    pageSize: number;\r\n    pageNumber: number;\r\n\r\n    itemCount: number;\r\n    totalPageCount: number;\r\n}\r\n\r\n\r\nclass MainPage extends Component<IProps, IState> {\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = ({\r\n            items: [],\r\n            displayFilters: false,\r\n            partName: '',\r\n            partDescription: '',\r\n            itemCount: LocalStorageHelper.calcItemCount(),\r\n            pageNumber: 1,\r\n            pageSize: 5,\r\n            totalPageCount: 1000,\r\n            tagNames: [],\r\n            sort: 'LAST_UPDATE:asc'\r\n        })\r\n        console.log('before build search')\r\n    }\r\n\r\n    private buildSearch(location: string) {\r\n        const query = new URLSearchParams(location);\r\n        let tagNames = query.get('tagNames');\r\n        if (tagNames) {\r\n            this.setState({tagNames: tagNames.split(',')})\r\n        }\r\n        let pageSize = query.get('pageSize');\r\n        if (pageSize) {\r\n            this.setState({pageSize: Number.parseInt(pageSize)})\r\n        }\r\n        let pageNumber = query.get('pageNumber');\r\n        if (pageNumber) {\r\n            this.setState({pageNumber: Number.parseInt(pageNumber)})\r\n        }\r\n        let partName = query.get('partName');\r\n        console.log('partName in buildSearch = ' + partName)\r\n        if (partName) {\r\n            this.setState({partName: partName})\r\n        }\r\n        let partDescription = query.get('partDescription');\r\n        if (partDescription) {\r\n            this.setState({partDescription: partDescription})\r\n        }\r\n        let sort = query.get('sort');\r\n        if (sort) {\r\n            this.setState({sort: sort})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadResources(this.props.location.search);\r\n        this.buildSearch(this.props.location.search);\r\n    }\r\n\r\n\r\n    private loadResources(location: string) {\r\n        const endpoint = \"http://localhost:8080/certificates\" + location;\r\n        console.log(\"loadResources, location = \" + location);\r\n\r\n        axios.get(endpoint).then(res => {\r\n            let data = res.data.items;\r\n            let totalPageCount = res.data.totalPageCount;\r\n            console.log(\"data = \" + data)\r\n            console.log(\"totalPageCount = \" + totalPageCount)\r\n            let list: Certificate[] = Certificate.parseCertificateList(data);\r\n            this.setState({items: list, totalPageCount: totalPageCount});\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.loadResources(location),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    handleAddTag = (chip) => {\r\n        this.setState(prev => ({\r\n            tagNames: [...prev.tagNames, chip]\r\n        }));\r\n    }\r\n    handleDeleteTag = (chip) => {\r\n        this.setState({\r\n            tagNames: this.state.tagNames.filter((e) => e !== chip)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Header cartItems={this.state.itemCount}/>\r\n                <div className={'container my-3 pt-5 text-center'}>\r\n                    {\r\n                        this.state.displayFilters ?\r\n                            <button className={'btn btn-primary'} onClick={() => this.toggleFilter()}>Hide\r\n                                filters</button>\r\n                            :\r\n                            <button className={'btn btn-primary'} onClick={() => this.toggleFilter()}>Show\r\n                                Filters</button>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.state.displayFilters &&\r\n                    <div className={'d-flex justify-content-center'}>\r\n                        <div className={'form__container mx-5 mb-5 w-50 text-center'}>\r\n                            <div className={'row text-center'}>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" id=\"partName\"\r\n                                           value={this.state.partName}\r\n                                           onChange={event => this.setState({partName: event.target.value})}/>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter description\"\r\n                                           id=\"partDescription\" value={this.state.partDescription}\r\n                                           onChange={event => this.setState({partDescription: event.target.value})}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group text-center row\">\r\n                                <div className={'col-6 text-left chip__array'}>\r\n                                    <ChipInput\r\n                                        label={'Tags'}\r\n                                        value={this.state.tagNames}\r\n                                        onAdd={chip => this.handleAddTag(chip)}\r\n                                        onDelete={chip => this.handleDeleteTag(chip)}/>\r\n                                </div>\r\n                                <div className={'col-6 text-center'}>\r\n                                    <div className={'radio text-left'}>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"sort\"\r\n                                                   id=\"exampleRadios1\" value=\"LAST_UPDATE:asc\"\r\n                                                   checked={this.state.sort === 'LAST_UPDATE:asc'}\r\n                                                   onChange={() => this.setState({sort: 'LAST_UPDATE:asc'})}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                                Sort by last update\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"sort\"\r\n                                                   id=\"exampleRadios2\" value=\"NAME:asc\"\r\n                                                   checked={this.state.sort === 'NAME:asc'}\r\n                                                   onChange={() => this.setState({sort: 'NAME:asc'})}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                                Sort by name\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={() => this.filter()} className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <main className={'main-page'}>\r\n                    <div className=\"coupon_list\">\r\n                        {\r\n                            this.state.items && this.state.items.map((el, i) => (\r\n                                <div key={i} className=\"card mx-2 my-4\">\r\n                                    <h2 className=\"card-title card-header text-center\">\r\n                                        {el.name}\r\n                                    </h2>\r\n\r\n                                    <div className=\"card-body-header p-3\">\r\n                                        <p className=\"card-text\">\r\n                                            {el.description.substr(0, 100)}\r\n                                        </p>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">\r\n                                            <span>Expires in 4 days</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <span>${el.price}</span>\r\n                                            <span>\r\n                                                <button className={'btn btn-secondary'}\r\n                                                        onClick={() => this.addCard(el.id)}>Add to Cart</button>\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body text-left\">\r\n                                        {\r\n                                            el.tags.map((value, index) => (\r\n                                                <span key={index} className={'mr-1'}>\r\n                                                    <Link to={'/?tagNames=' + value}\r\n                                                          onClick={() => this.setState({\r\n                                                                  tagNames: [value],\r\n                                                                  partName: '',\r\n                                                                  partDescription: '',\r\n                                                                  sort: 'LAST_UPDATE:asc',\r\n                                                                  pageNumber: 1\r\n                                                              },\r\n                                                              () => this.filter())}>\r\n                                                        #{value}\r\n                                                    </Link>\r\n                                                </span>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </main>\r\n\r\n                <Pagination pageNumber={this.state.pageNumber} pageSize={this.state.pageSize}\r\n                            totalPageCount={this.state.totalPageCount}\r\n                            onClickPagination={(event, input) => this.onClickPagination(event, input)}\r\n                            changePageSize={(event) => this.changePageSize(event)}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private changePageSize(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState(() => (({pageNumber: 1, pageSize: Number.parseInt(event.target.value)})),\r\n            () => this.filter());\r\n    }\r\n\r\n    private filter() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partName, 'partName');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partDescription, 'partDescription');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageNumber, 'pageNumber');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageSize, 'pageSize');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.sort, 'sort');\r\n        QueryUrlParamHelper.setParamQueryArray(query, this.state.tagNames, 'tagNames');\r\n        let path = \"?\" + query.toString();\r\n        this.props.history.replace(path);\r\n        this.loadResources(path);\r\n        this.buildSearch(path);\r\n    }\r\n\r\n\r\n    private addCard(id: number) {\r\n        LocalStorageHelper.putItemBasket(id);\r\n        this.setState({itemCount: LocalStorageHelper.calcItemCount()})\r\n    }\r\n\r\n    private toggleFilter(): void {\r\n        this.setState(prevState => ({\r\n            displayFilters: !prevState.displayFilters\r\n        }));\r\n    }\r\n\r\n    private onClickPagination(event: React.MouseEvent<HTMLAnchorElement>, input: number) {\r\n        event.preventDefault();\r\n        console.log(\"onclick pagination = \" + input)\r\n        this.setState({pageNumber: input}, () => this.filter());\r\n    }\r\n}\r\n\r\nexport default withRouter(MainPage);",["104","105"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\LoginPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\RegisterPage.tsx",["106"],"import React, {Component, RefObject} from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport '../styles/register.css'\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from \"../components/Header\";\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport RefExtractor from \"../services/RefExtractor\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    bad_username: boolean;\r\n    bad_password: boolean;\r\n    bad_name: boolean;\r\n    bad_repeat_password: boolean;\r\n    err_msg?: string\r\n}\r\n\r\n\r\nclass RegisterPage extends Component<IProps, IState> {\r\n\r\n    private username = React.createRef<HTMLInputElement>();\r\n    private password = React.createRef<HTMLInputElement>();\r\n    private repeat_password = React.createRef<HTMLInputElement>();\r\n    private first_name = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            bad_name: false,\r\n            bad_password: false,\r\n            bad_username: false,\r\n            bad_repeat_password: false\r\n        }\r\n    }\r\n\r\n    private handleSubmit = async (\r\n        e: React.FormEvent<HTMLFormElement>\r\n    ): Promise<void> => {\r\n        e.preventDefault();\r\n        const endpoint = \"http://localhost:8080/users\";\r\n\r\n        let username: string = RefExtractor.exctractRef(this.username);\r\n        let password: string = RefExtractor.exctractRef(this.password);\r\n        let repeat_password: string = RefExtractor.exctractRef(this.repeat_password);\r\n        let first_name: string = RefExtractor.exctractRef(this.first_name);\r\n\r\n        if (!this.isFormValid(username, password, repeat_password, first_name)) {\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            username: username,\r\n            password: password,\r\n            firstName: first_name\r\n        }\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            this.props.history.push(\"/login\");\r\n        }).catch((error) => {\r\n            if (error.response.data.errorCode === '40026') {\r\n                this.setState({err_msg: 'User with so username already exists'})\r\n            }\r\n            if (error.response.data.errorCode === '40019') {\r\n                this.setState({err_msg: error.response.data.message})\r\n            }\r\n            console.log(\"login error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.handleSubmit(e),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n\r\n    };\r\n\r\n    private isFormValid(username: string, password: string, repeat_password: string, first_name: string): boolean {\r\n        let result = true;\r\n        if (!username || username === '' || username.length < 3 || username.length > 30) {\r\n            this.setState({bad_username: true})\r\n            result = false;\r\n        }\r\n\r\n        if (!password || password === '' || password.length < 4 || password.length > 30) {\r\n            this.setState({bad_password: true});\r\n            result = false;\r\n        }\r\n        if (!repeat_password || repeat_password === '' || password !== repeat_password) {\r\n            this.setState({bad_repeat_password: true});\r\n            result = false;\r\n        }\r\n        if (first_name && (/\\s/.test(first_name) || first_name.length > 30)) {\r\n            this.setState({bad_name: true});\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header cartItems={LocalStorageHelper.calcItemCount()}/>\r\n                <main className={'mt-5 pt-5 register_container'}>\r\n                    <div className=\"register_container\">\r\n                        <div className=\"logo_container\">\r\n                            <span>Register</span>\r\n                        </div>\r\n                        {\r\n                            this.state.err_msg &&\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {this.state.err_msg}\r\n                            </div>\r\n                        }\r\n                        <div className=\"inputs_container\">\r\n                            <form onSubmit={this.handleSubmit} noValidate={true}>\r\n                                <div className=\"first_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"login_name\">Login Name</label>\r\n                                        {\r\n                                            this.state.bad_username ?\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_username: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        {\r\n                                            this.state.bad_password ?\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"second_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"first_name\">Your Name</label>\r\n                                        {\r\n                                            this.state.bad_name ?\r\n                                                <input type=\"text\" id=\"first_name\" ref={this.first_name}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_name: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"first_name\" ref={this.first_name}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"repeat_password\">Repeat Password</label>\r\n                                        {\r\n                                            this.state.bad_repeat_password ?\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_repeat_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <div className=\"btn_holder\">\r\n                                            <button className=\"transparent_bg\" type={'reset'}>Cancel</button>\r\n                                            <button className=\"green_bg\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPage);",["107","108"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Certificate.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\admin\\CertificatesAdminPage.tsx",["109","110","111","112"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\Interceptors.js",[],["113","114"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Pagination.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\AuthorizationHandleService.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\LocalStorageHelper.ts",["115"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\Footer.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\BasketPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\components\\CouponComp.tsx",["116"],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\RefExtractor.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\pages\\user\\UserOrdersPage.tsx",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Order.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\entity\\Purchase.ts",[],"D:\\Programming\\epam-java-learning\\java-mjc-school\\front-end-react\\src\\services\\Parser.ts",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":16},{"ruleId":"117","replacedBy":"126"},{"ruleId":"119","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"121","severity":1,"message":"130","line":13,"column":9,"nodeType":"123","messageId":"124","endLine":13,"endColumn":17},{"ruleId":"117","replacedBy":"131"},{"ruleId":"119","replacedBy":"132"},{"ruleId":"121","severity":1,"message":"133","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"117","replacedBy":"134"},{"ruleId":"119","replacedBy":"135"},{"ruleId":"121","severity":1,"message":"136","line":13,"column":9,"nodeType":"123","messageId":"124","endLine":13,"endColumn":14},{"ruleId":"121","severity":1,"message":"137","line":13,"column":16,"nodeType":"123","messageId":"124","endLine":13,"endColumn":27},{"ruleId":"121","severity":1,"message":"138","line":13,"column":29,"nodeType":"123","messageId":"124","endLine":13,"endColumn":38},{"ruleId":"121","severity":1,"message":"139","line":13,"column":40,"nodeType":"123","messageId":"124","endLine":13,"endColumn":51},{"ruleId":"117","replacedBy":"140"},{"ruleId":"119","replacedBy":"141"},{"ruleId":"121","severity":1,"message":"142","line":3,"column":13,"nodeType":"123","messageId":"124","endLine":3,"endColumn":19},{"ruleId":"121","severity":1,"message":"143","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":28},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'CartPage' is defined but never used.",["144"],["145"],["144"],["145"],"'Redirect' is defined but never used.",["144"],["145"],"'RefObject' is defined but never used.",["144"],["145"],"'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.",["144"],["145"],"'basket' is assigned a value but never used.","'RouteComponentProps' is defined but never used.","no-global-assign","no-unsafe-negation"]