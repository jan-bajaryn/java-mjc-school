{"version":3,"sources":["Interceptors.js","entity/Certificate.ts","services/LocalStorageHelper.ts","components/Header.tsx","services/AuthorizationHandleService.ts","components/Pagination.tsx","services/QueryUrlParamHelper.ts","pages/MainPage.tsx","services/RefExtractor.tsx","pages/LoginPage.tsx","pages/RegisterPage.tsx","services/Parser.ts","components/modals/CreateOrEditModal.tsx","components/modals/ViewModal.tsx","pages/admin/CertificatesAdminPage.tsx","components/CouponComp.tsx","pages/user/BasketPage.tsx","entity/Purchase.ts","entity/Order.ts","pages/user/UserOrdersPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["require","interceptors","request","use","config","jwtToken","localStorage","getItem","console","log","headers","err","Promise","reject","Certificate","_id","_name","_description","_price","_createDate","Date","_lastUpdateDate","_duration","_tags","this","value","obj","cert","id","name","description","price","duration","createDate","lastUpdateDate","tags","map","t","data","list","i","length","push","parse","LocalStorageHelper","Array","from","getBasket","values","reduce","previousValue","currentValue","basket","current","get","set","saveBasket","newCount","delete","JSON","stringify","entries","setItem","removeItem","access_token","refresh_token","role","username","item","Map","Header","props","state","setState","className","to","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","cartItems","calcItemCount","isLogged","onClick","event","preventDefault","logout","history","window","location","reload","Component","withRouter","AuthorizationHandleService","error","successCallback","badCallback","response","status","tryRefreshToken","refresh","params","URLSearchParams","append","axios","post","then","res","login","catch","Pagination","pageNumber","onClickPagination","totalPageCount","index","pageSize","onChange","changePageSize","QueryUrlParamHelper","query","join","MainPage","handleAddTag","chip","prev","tagNames","handleDeleteTag","filter","e","items","displayFilters","partName","partDescription","itemCount","sort","split","Number","parseInt","loadResources","search","buildSearch","endpoint","parseCertificateList","handleTokenExpired","toggleFilter","placeholder","target","label","onAdd","onDelete","checked","htmlFor","el","substr","addCard","input","setParamQuery","setParamQueryArray","path","toString","replace","putItemBasket","prevState","RefExtractor","ref","LoginPage","React","createRef","password","handleSubmit","a","exctractRef","validateForm","bad_credentials","bad_username","bad_password","result","onSubmit","noValidate","RegisterPage","repeat_password","isFormValid","errorCode","err_msg","message","bad_name","bad_repeat_password","test","Parser","cell","getFullYear","getMonth","getDay","getHours","getMinutes","CreateOrEditModal","Modal","isOpen","showCreateOrEditModal","toggle","ModalHeader","writeOrEditCaption","ModalBody","errText","Alert","color","wrongEditName","editName","onNameChange","wrongEditDescription","rows","editDescription","onDescriptionChange","isNaN","editPrice","step","min","onPriceChange","editDuration","onDurationChange","editTags","onTagAdd","onTagDelete","ModalFooter","handleCreateOrEdit","ViewModal","showModal","scope","currentItem","dateParseString","CertificatesAdminPage","columns","dataField","text","formatter","dateFormatter","sortFunc","b","order","rowA","rowB","compareDates","onSort","field","tagsFormatter","row","showViewModal","errModalText","filterString","checkForAdmin","filterValue","pattern","RegExp","match","bootstrap4","keyField","tabIndex","aria-labelledby","aria-hidden","data-dismiss","handleDeleteItem","toggleCreateOrEditModal","parseFloat","toggleViewModal","validateCreateOrEdit","edit","create","patch","CouponComp","certificate","onMinus","size","onPlus","Math","round","BasketPage","coupons","resultBasket","buildItem","removeAllItemBasket","p","c","onFormSubmit","removeItemBasket","copyMap","retCerts","count","getRole","userId","getUserId","giftCertificates","clearBasket","Purchase","certificateId","priceForOne","Order","purchases","parseList","UserOrdersPage","expandRow","renderer","showExpandColumn","expandHeaderColumnRenderer","isAnyExpands","expandColumnRenderer","expanded","orders","loadResource","getName","loadAdmin","loadUser","arr","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6d3f4c0.chunk.js","sourcesContent":["const axios = require(\"axios\");\r\n\r\n\r\naxios.interceptors.request.use(\r\n    function (config) {\r\n        let jwtToken = localStorage.getItem(\"authorization\");\r\n        console.log(\"jwtToken = \" + jwtToken);\r\n        if (jwtToken && !config.headers[\"Authorization\"]) {\r\n            config.headers[\"Authorization\"] = \"Bearer \" + jwtToken;\r\n        }\r\n        return config;\r\n    },\r\n    function (err) {\r\n        console.log(\"err = \" + err)\r\n        return Promise.reject(err);\r\n    }\r\n);","export default class Certificate {\r\n    private _id: number = 0;\r\n    private _name: string = '';\r\n    private _description: string = '';\r\n    private _price: number = 0;\r\n    private _createDate: Date = new Date();\r\n    private _lastUpdateDate: Date = new Date();\r\n    private _duration: number = 0;\r\n    private _tags: Array<string> = [];\r\n\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: number) {\r\n        this._id = value;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get description(): string {\r\n        return this._description;\r\n    }\r\n\r\n    set description(value: string) {\r\n        this._description = value;\r\n    }\r\n\r\n    get price(): number {\r\n        return this._price;\r\n    }\r\n\r\n    set price(value: number) {\r\n        this._price = value;\r\n    }\r\n\r\n    get createDate(): Date {\r\n        return this._createDate;\r\n    }\r\n\r\n    set createDate(value: Date) {\r\n        this._createDate = value;\r\n    }\r\n\r\n    get lastUpdateDate(): Date {\r\n        return this._lastUpdateDate;\r\n    }\r\n\r\n    set lastUpdateDate(value: Date) {\r\n        this._lastUpdateDate = value;\r\n    }\r\n\r\n    get duration(): number {\r\n        return this._duration;\r\n    }\r\n\r\n    set duration(value: number) {\r\n        this._duration = value;\r\n    }\r\n\r\n    get tags(): Array<string> {\r\n        return this._tags;\r\n    }\r\n\r\n    set tags(value: Array<string>) {\r\n        this._tags = value;\r\n    }\r\n\r\n    static parse(obj): Certificate {\r\n        let cert = new Certificate();\r\n        cert.id = obj.id;\r\n        cert.name = obj.name;\r\n        cert.description = obj.description;\r\n        cert.price = obj.price;\r\n        cert.duration = obj.duration;\r\n        cert.createDate = new Date(obj.createDate)\r\n        cert.lastUpdateDate = new Date(obj.lastUpdateDate)\r\n        cert.tags = obj.tags.map(t => t.name);\r\n        return cert;\r\n    }\r\n\r\n    static parseCertificateList(data: any): Certificate[] {\r\n        let list: Certificate[] = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let obj = data[i];\r\n            console.log('obj.name = ' + obj.name)\r\n            list.push(Certificate.parse(obj));\r\n        }\r\n        return list;\r\n    }\r\n}","export default class LocalStorageHelper {\r\n    static calcItemCount() {\r\n        return Array.from(this.getBasket().values())\r\n            .reduce((previousValue, currentValue) => previousValue + currentValue, 0)\r\n    }\r\n\r\n    static putItemBasket(id: number) {\r\n        let basket = this.getBasket();\r\n        let current = basket.get(id);\r\n        if (current) {\r\n            basket.set(id, current + 1);\r\n        } else {\r\n            basket.set(id, 1);\r\n        }\r\n        this.saveBasket(basket);\r\n    }\r\n\r\n    static removeItemBasket(id: number) {\r\n        let basket = this.getBasket();\r\n        let current = basket.get(id);\r\n        if (current) {\r\n            let newCount = current - 1;\r\n            if (newCount < 1) {\r\n                basket.delete(id);\r\n            } else {\r\n                basket.set(id, newCount);\r\n            }\r\n            this.saveBasket(basket);\r\n        }\r\n    }\r\n\r\n    private static saveBasket(map: Map<number, number>) {\r\n        console.log('save basket = ', JSON.stringify(Array.from(map.entries())));\r\n        localStorage.setItem('cart', JSON.stringify(Array.from(map.entries())));\r\n    }\r\n\r\n    static logout() {\r\n        localStorage.removeItem(\"authorization\");\r\n        localStorage.removeItem(\"refresh_token\");\r\n        localStorage.removeItem(\"role\");\r\n        localStorage.removeItem(\"userId\");\r\n        localStorage.removeItem(\"username\");\r\n        localStorage.removeItem(\"name\");\r\n    }\r\n\r\n    static login(access_token, refresh_token, role, id, username, name) {\r\n        localStorage.setItem(\"authorization\", access_token);\r\n        localStorage.setItem(\"refresh_token\", refresh_token);\r\n        localStorage.setItem(\"role\", role);\r\n        localStorage.setItem(\"userId\", id);\r\n        localStorage.setItem(\"username\", username);\r\n        if (name) {\r\n            localStorage.setItem(\"name\", name);\r\n        } else {\r\n            localStorage.removeItem(\"name\");\r\n        }\r\n    }\r\n\r\n    static isLogged(): boolean {\r\n        return localStorage.getItem('authorization') !== null;\r\n    }\r\n\r\n    static getBasket(): Map<number, number> {\r\n        let item = localStorage.getItem('cart');\r\n        return item === null ? new Map([]) : new Map(JSON.parse(item));\r\n    }\r\n\r\n    static getUserId() {\r\n        return localStorage.getItem('userId');\r\n    }\r\n\r\n    static clearBasket() {\r\n        localStorage.removeItem('cart');\r\n    }\r\n\r\n    static getRole(): string | null {\r\n        return localStorage.getItem('role');\r\n    }\r\n\r\n    static getName(): string | null {\r\n        return localStorage.getItem('name');\r\n    }\r\n\r\n    static removeAllItemBasket(id: number) {\r\n        let basket = this.getBasket();\r\n        basket.delete(id);\r\n        this.saveBasket(basket);\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../styles/header.css'\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\n\r\ninterface PieceProps extends RouteComponentProps<any> {\r\n    cartItems?: number;\r\n}\r\n\r\ninterface IState {\r\n    role: null | string,\r\n    username: string | null\r\n}\r\n\r\nclass Header extends Component<PieceProps, IState> {\r\n\r\n    constructor(props: PieceProps) {\r\n        super(props);\r\n        this.state = {\r\n            role: null,\r\n            username: null\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let item = localStorage.getItem('role');\r\n        let username = localStorage.getItem('username');\r\n        console.log(\"Header: role = \" + item);\r\n        this.setState({role: item, username: username});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light justify-content-center fixed-top bg-white\">\r\n                <Link to={'/'} className=\"navbar-brand\" href=\"#\">Home</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {\r\n                            this.state.role === 'ADMIN' &&\r\n                            <li className=\"nav-item active\">\r\n                                <Link className=\"nav-link\"\r\n                                      to={'/admin/certificates'}>\r\n                                    Certificates\r\n                                    <span className=\"sr-only\">(current)</span>\r\n                                </Link>\r\n                            </li>\r\n                        }\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav\">\r\n\r\n                        <li className={'nav-item'}>\r\n                            <Link to={'/orders'} className=\"nav-link\">\r\n                                {\r\n                                    this.state.username &&\r\n                                    <span>{this.state.username}</span>\r\n                                }\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className={'nav-item'}>\r\n                            <Link to={'/basket'} className=\"nav-link\">\r\n                                <i className=\"material-icons\">shopping_cart</i>\r\n                                {\r\n                                    this.props.cartItems ?\r\n                                        <small>{this.props.cartItems}</small>\r\n                                        :\r\n                                        <small>{LocalStorageHelper.calcItemCount()}</small>\r\n                                }\r\n                            </Link>\r\n                        </li>\r\n                        <li className={'nav-item'}>\r\n                            <Link to={\"/login\"} className=\"nav-link\">Login</Link>\r\n                        </li>\r\n                        <li className={'nav-item'}>\r\n                            <Link to={\"/register\"} className=\"nav-link\">Sign Up</Link>\r\n                        </li>\r\n                        {\r\n                            LocalStorageHelper.isLogged() &&\r\n                            <li className={'nav-item'}>\r\n                                <Link to={\"/logout\"} onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    LocalStorageHelper.logout();\r\n                                    this.props.history.push('/login');\r\n                                    window.location.reload();\r\n                                }} className=\"nav-link\">\r\n                                    Log out\r\n                                </Link>\r\n                            </li>\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Header);","import axios from \"axios\";\r\nimport LocalStorageHelper from \"./LocalStorageHelper\";\r\n\r\nexport default class AuthorizationHandleService {\r\n    static handleTokenExpired(error, successCallback, badCallback) {\r\n        if (error && error.response && error.response.status && error.response.data && error.response.data.error) {\r\n            if (error.response.status === 401 && error.response.data.error === 'invalid_token') {\r\n                AuthorizationHandleService.tryRefreshToken(successCallback, badCallback);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static tryRefreshToken(successCallback, badCallback) {\r\n        let refresh = localStorage.getItem(\"refresh_token\");\r\n        console.log(\"refresh token to use = \" + refresh)\r\n        if (refresh) {\r\n            console.log(\"enter refresh procedure\");\r\n            const endpoint = \"http://localhost:9000/oauth/token\";\r\n            const headers = {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': 'Basic Y2xpZW50aWQ6cGFzc3dvcmQ='\r\n            }\r\n            const params = new URLSearchParams();\r\n            params.append('grant_type', 'refresh_token');\r\n            params.append('refresh_token', refresh);\r\n            console.log(\"before send request refresh procedure\");\r\n            axios.post(\r\n                endpoint, params,\r\n                {\r\n                    headers: headers\r\n                }\r\n            ).then(res => {\r\n                console.log(\"refresh procedure success\")\r\n                LocalStorageHelper.login(\r\n                    res.data.access_token, res.data.refresh_token, res.data.role, res.data.id, res.data.username,res.data.name\r\n                );\r\n                successCallback();\r\n            }).catch((error) => {\r\n                console.log(\"refresh procedure error\")\r\n                console.log(\"error refresh procedure = \" + error);\r\n                LocalStorageHelper.logout();\r\n                badCallback();\r\n            });\r\n        }\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\ninterface IProps {\r\n    pageNumber: number,\r\n    pageSize: number,\r\n    totalPageCount: number,\r\n    onClickPagination: any,\r\n    changePageSize: any\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport default class Pagination extends Component<IProps, IState> {\r\n\r\n    render() {\r\n        return (\r\n            <div className={'row m-5 align-middle'}>\r\n                <ul className=\"pagination justify-content-center pagination-lg col-10\">\r\n                    {\r\n                        (!this.props.pageNumber || this.props.pageNumber <= 1) ?\r\n                            <li className=\"page-item disabled\"><a className=\"page-link\"\r\n                                                                  href=\"?\">Previous</a></li>\r\n                            :\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" href=\"?\"\r\n                                   onClick={event => this.props.onClickPagination(event, this.props.pageNumber - 1)}>\r\n                                    Previous\r\n                                </a>\r\n                            </li>\r\n                    }\r\n                    {\r\n                        this.props.pageNumber !== 1 && this.props.totalPageCount !== 0 &&\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\"\r\n                               href=\"?\" onClick={event => this.props.onClickPagination(event, 1)}>\r\n                                1\r\n                            </a>\r\n                        </li>\r\n                    }\r\n                    {this.props.totalPageCount !== 0 &&\r\n                    [this.props.pageNumber - 3, this.props.pageNumber - 2, this.props.pageNumber - 1].map((value, index) => (\r\n                            value > 1 &&\r\n                            <li key={index} className=\"page-item\">\r\n                                <a className=\"page-link\"\r\n                                   href=\"?\" onClick={event => this.props.onClickPagination(event, value)}>\r\n                                    {value}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    )\r\n                    }\r\n\r\n                    {this.props.totalPageCount !== 0 &&\r\n                    <li className=\"page-item active\">\r\n                        <a className=\"page-link\"\r\n                           href=\"?\" onClick={event => this.props.onClickPagination(event, this.props.pageNumber)}>\r\n                            {this.props.pageNumber}\r\n                        </a>\r\n                    </li>\r\n                    }\r\n\r\n                    {this.props.totalPageCount !== 0 &&\r\n                    [this.props.pageNumber + 1, this.props.pageNumber + 2, this.props.pageNumber + 3].map((value, index) => (\r\n                            this.props.totalPageCount > value &&\r\n                            <li key={index} className=\"page-item\">\r\n                                <a className=\"page-link\"\r\n                                   href=\"?\" onClick={event => this.props.onClickPagination(event, value)}>\r\n                                    {value}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    )\r\n                    }\r\n                    {this.props.totalPageCount !== 0 &&\r\n                    this.props.totalPageCount !== this.props.pageNumber &&\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\"\r\n                           href=\"?\"\r\n                           onClick={event => this.props.onClickPagination(event, this.props.totalPageCount)}>\r\n                            {this.props.totalPageCount}\r\n                        </a>\r\n                    </li>\r\n                    }\r\n                    {\r\n                        this.props.totalPageCount > this.props.pageNumber ?\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" href=\"?\"\r\n                                   onClick={event => this.props.onClickPagination(event, this.props.pageNumber + 1)}>\r\n                                    Next\r\n                                </a>\r\n                            </li>\r\n                            :\r\n                            <li className=\"page-item disabled\">\r\n                                <a className=\"page-link\" href=\"?\">\r\n                                    Next\r\n                                </a>\r\n                            </li>\r\n                    }\r\n                </ul>\r\n\r\n                <div className=\"form-group w-10 col-2\">\r\n                    <label>\r\n                        <select className=\"form-control btn-lg\" value={this.props.pageSize}\r\n                                onChange={event => this.props.changePageSize(event)}>\r\n                            <option>5</option>\r\n                            <option>10</option>\r\n                            <option>15</option>\r\n                            <option>20</option>\r\n                            <option>25</option>\r\n                            <option>30</option>\r\n                            <option>50</option>\r\n                            <option>100</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","export default class QueryUrlParamHelper {\r\n    static setParamQueryArray(query: URLSearchParams, values: string[], name: string) {\r\n        console.log(\"enter method setParamQueryArray\")\r\n        if (values.length !== 0) {\r\n            console.log(\"set something\")\r\n            query.set(name, values.join(','));\r\n        } else {\r\n            query.delete(name);\r\n        }\r\n    }\r\n\r\n    static setParamQuery(query: URLSearchParams, value: any, name: string) {\r\n        if (value) {\r\n            query.set(name, value);\r\n        } else {\r\n            query.delete(name);\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Certificate from \"../entity/Certificate\";\r\nimport Header from \"../components/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport '../styles/main-page.css'\r\nimport QueryUrlParamHelper from \"../services/QueryUrlParamHelper\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    items: Certificate[];\r\n\r\n    tagNames: string[];\r\n    sort?: string;\r\n\r\n    partName: string;\r\n    partDescription: string;\r\n    displayFilters: boolean;\r\n    pageSize: number;\r\n    pageNumber: number;\r\n\r\n    itemCount: number;\r\n    totalPageCount: number;\r\n}\r\n\r\n\r\nclass MainPage extends Component<IProps, IState> {\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = ({\r\n            items: [],\r\n            displayFilters: false,\r\n            partName: '',\r\n            partDescription: '',\r\n            itemCount: LocalStorageHelper.calcItemCount(),\r\n            pageNumber: 1,\r\n            pageSize: 5,\r\n            totalPageCount: 1000,\r\n            tagNames: [],\r\n            sort: 'LAST_UPDATE:asc'\r\n        })\r\n        console.log('before build search')\r\n    }\r\n\r\n    private buildSearch(location: string) {\r\n        const query = new URLSearchParams(location);\r\n        let tagNames = query.get('tagNames');\r\n        if (tagNames) {\r\n            this.setState({tagNames: tagNames.split(',')})\r\n        }\r\n        let pageSize = query.get('pageSize');\r\n        if (pageSize) {\r\n            this.setState({pageSize: Number.parseInt(pageSize)})\r\n        }\r\n        let pageNumber = query.get('pageNumber');\r\n        if (pageNumber) {\r\n            this.setState({pageNumber: Number.parseInt(pageNumber)})\r\n        }\r\n        let partName = query.get('partName');\r\n        console.log('partName in buildSearch = ' + partName)\r\n        if (partName) {\r\n            this.setState({partName: partName})\r\n        }\r\n        let partDescription = query.get('partDescription');\r\n        if (partDescription) {\r\n            this.setState({partDescription: partDescription})\r\n        }\r\n        let sort = query.get('sort');\r\n        if (sort) {\r\n            this.setState({sort: sort})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadResources(this.props.location.search);\r\n        this.buildSearch(this.props.location.search);\r\n    }\r\n\r\n\r\n    private loadResources(location: string) {\r\n        const endpoint = \"http://localhost:8080/certificates\" + location;\r\n        console.log(\"loadResources, location = \" + location);\r\n\r\n        axios.get(endpoint).then(res => {\r\n            let data = res.data.items;\r\n            let totalPageCount = res.data.totalPageCount;\r\n            console.log(\"data = \" + data)\r\n            console.log(\"totalPageCount = \" + totalPageCount)\r\n            let list: Certificate[] = Certificate.parseCertificateList(data);\r\n            this.setState({items: list, totalPageCount: totalPageCount});\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.loadResources(location),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    handleAddTag = (chip) => {\r\n        this.setState(prev => ({\r\n            tagNames: [...prev.tagNames, chip]\r\n        }));\r\n    }\r\n    handleDeleteTag = (chip) => {\r\n        this.setState({\r\n            tagNames: this.state.tagNames.filter((e) => e !== chip)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Header cartItems={this.state.itemCount}/>\r\n                <div className={'container my-3 pt-5 text-center'}>\r\n                    {\r\n                        this.state.displayFilters ?\r\n                            <button className={'btn btn-primary'} onClick={() => this.toggleFilter()}>Hide\r\n                                filters</button>\r\n                            :\r\n                            <button className={'btn btn-primary'} onClick={() => this.toggleFilter()}>Show\r\n                                Filters</button>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.state.displayFilters &&\r\n                    <div className={'d-flex justify-content-center'}>\r\n                        <div className={'form__container mx-5 mb-5 w-50 text-center'}>\r\n                            <div className={'row text-center'}>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" id=\"partName\"\r\n                                           value={this.state.partName}\r\n                                           onChange={event => this.setState({partName: event.target.value})}/>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter description\"\r\n                                           id=\"partDescription\" value={this.state.partDescription}\r\n                                           onChange={event => this.setState({partDescription: event.target.value})}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group text-center row\">\r\n                                <div className={'col-6 text-left chip__array'}>\r\n                                    <ChipInput\r\n                                        label={'Tags'}\r\n                                        value={this.state.tagNames}\r\n                                        onAdd={chip => this.handleAddTag(chip)}\r\n                                        onDelete={chip => this.handleDeleteTag(chip)}/>\r\n                                </div>\r\n                                <div className={'col-6 text-center'}>\r\n                                    <div className={'radio text-left'}>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"sort\"\r\n                                                   id=\"exampleRadios1\" value=\"LAST_UPDATE:asc\"\r\n                                                   checked={this.state.sort === 'LAST_UPDATE:asc'}\r\n                                                   onChange={() => this.setState({sort: 'LAST_UPDATE:asc'})}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                                Sort by last update\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"sort\"\r\n                                                   id=\"exampleRadios2\" value=\"NAME:asc\"\r\n                                                   checked={this.state.sort === 'NAME:asc'}\r\n                                                   onChange={() => this.setState({sort: 'NAME:asc'})}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                                Sort by name\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={() => this.filter()} className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <main className={'main-page'}>\r\n                    <div className=\"coupon_list\">\r\n                        {\r\n                            this.state.items && this.state.items.map((el, i) => (\r\n                                <div key={i} className=\"card mx-2 my-4\">\r\n                                    <h2 className=\"card-title card-header text-center\">\r\n                                        {el.name}\r\n                                    </h2>\r\n\r\n                                    <div className=\"card-body-header p-3\">\r\n                                        <p className=\"card-text\">\r\n                                            {el.description.substr(0, 100)}\r\n                                        </p>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">\r\n                                            <span>Expires in 4 days</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <span>${el.price}</span>\r\n                                            <span>\r\n                                                <button className={'btn btn-secondary'}\r\n                                                        onClick={() => this.addCard(el.id)}>Add to Cart</button>\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"card-body text-left\">\r\n                                        {\r\n                                            el.tags.map((value, index) => (\r\n                                                <span key={index} className={'mr-1'}>\r\n                                                    <Link to={'/?tagNames=' + value}\r\n                                                          onClick={() => this.setState({\r\n                                                                  tagNames: [value],\r\n                                                                  partName: '',\r\n                                                                  partDescription: '',\r\n                                                                  sort: 'LAST_UPDATE:asc',\r\n                                                                  pageNumber: 1\r\n                                                              },\r\n                                                              () => this.filter())}>\r\n                                                        #{value}\r\n                                                    </Link>\r\n                                                </span>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </main>\r\n\r\n                <Pagination pageNumber={this.state.pageNumber} pageSize={this.state.pageSize}\r\n                            totalPageCount={this.state.totalPageCount}\r\n                            onClickPagination={(event, input) => this.onClickPagination(event, input)}\r\n                            changePageSize={(event) => this.changePageSize(event)}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private changePageSize(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState(() => (({pageNumber: 1, pageSize: Number.parseInt(event.target.value)})),\r\n            () => this.filter());\r\n    }\r\n\r\n    private filter() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partName, 'partName');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partDescription, 'partDescription');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageNumber, 'pageNumber');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageSize, 'pageSize');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.sort, 'sort');\r\n        QueryUrlParamHelper.setParamQueryArray(query, this.state.tagNames, 'tagNames');\r\n        let path = \"?\" + query.toString();\r\n        this.props.history.replace(path);\r\n        this.loadResources(path);\r\n        this.buildSearch(path);\r\n    }\r\n\r\n\r\n    private addCard(id: number) {\r\n        LocalStorageHelper.putItemBasket(id);\r\n        this.setState({itemCount: LocalStorageHelper.calcItemCount()})\r\n    }\r\n\r\n    private toggleFilter(): void {\r\n        this.setState(prevState => ({\r\n            displayFilters: !prevState.displayFilters\r\n        }));\r\n    }\r\n\r\n    private onClickPagination(event: React.MouseEvent<HTMLAnchorElement>, input: number) {\r\n        event.preventDefault();\r\n        console.log(\"onclick pagination = \" + input)\r\n        this.setState({pageNumber: input}, () => this.filter());\r\n    }\r\n}\r\n\r\nexport default withRouter(MainPage);","import {RefObject} from \"react\";\r\n\r\nexport default class RefExtractor {\r\n    static exctractRef(ref: RefObject<HTMLInputElement>) {\r\n        if (ref.current) {\r\n            return ref.current.value;\r\n        }\r\n        return '';\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport '../styles/login.css'\r\nimport axios from \"axios\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport Header from \"../components/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport RefExtractor from \"../services/RefExtractor\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    bad_credentials: boolean;\r\n    bad_username: boolean;\r\n    bad_password: boolean;\r\n}\r\n\r\nclass LoginPage extends Component<IProps, IState> {\r\n    private username = React.createRef<HTMLInputElement>();\r\n    private password = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            bad_credentials: false,\r\n            bad_username: false,\r\n            bad_password: false\r\n        }\r\n\r\n    }\r\n\r\n    private handleSubmit = async (\r\n        e: React.FormEvent<HTMLFormElement>\r\n    ): Promise<void> => {\r\n        e.preventDefault();\r\n        const endpoint = \"http://localhost:9000/oauth/token\";\r\n\r\n        let username: string = RefExtractor.exctractRef(this.username);\r\n        let password: string = RefExtractor.exctractRef(this.password);\r\n\r\n        if (!this.validateForm(username, password)) {\r\n            return;\r\n        }\r\n        console.log(\"username = \" + username)\r\n        console.log(\"password = \" + password)\r\n\r\n        const params = new URLSearchParams();\r\n        params.append('grant_type', 'password');\r\n        params.append('username', username);\r\n        params.append('password', password);\r\n\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': 'Basic Y2xpZW50aWQ6cGFzc3dvcmQ='\r\n        }\r\n\r\n        axios.post(\r\n            endpoint, params,\r\n            {\r\n                headers: headers\r\n            }\r\n        ).then(res => {\r\n            LocalStorageHelper.login(res.data.access_token, res.data.refresh_token, res.data.role, res.data.id, res.data.username, res.data.name);\r\n\r\n            this.props.history.push(\"/\");\r\n\r\n        }).catch((error) => {\r\n            if (error.response.status === 400 && error.response.data.error === 'invalid_grant') {\r\n                this.setState({bad_credentials: true});\r\n            }\r\n        });\r\n    };\r\n\r\n    private validateForm(username: string, password: string): boolean {\r\n        let result = true;\r\n        if (!username || username === '' || username.length < 3 || username.length > 30) {\r\n            this.setState({bad_username: true})\r\n            result = false;\r\n        }\r\n\r\n        if (!password || password === '' || password.length < 4 || password.length > 30) {\r\n            this.setState({bad_password: true});\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header cartItems={LocalStorageHelper.calcItemCount()}/>\r\n                <main className={'pt-5 mt-5 login'}>\r\n                    <div className=\"form-login\">\r\n                        <div className=\"logo_container\">\r\n                            <div className=\"logo_place\">\r\n                                <span>Logo</span>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={this.handleSubmit} noValidate={true}>\r\n                            <div>\r\n                                {\r\n                                    this.state.bad_username ?\r\n                                        <label>\r\n                                            <input type=\"text\" placeholder=\"Login\" ref={this.username}\r\n                                                   className={'is-invalid form-control'}\r\n                                                   onChange={() => this.setState({bad_username: false})}/>\r\n                                            <br/>\r\n                                            <span className={'error_message'}>Incorrect Username</span>\r\n                                        </label>\r\n                                        :\r\n                                        <label>\r\n                                            <input type=\"text\" className={'form-control'} placeholder=\"Login\"\r\n                                                   ref={this.username}/>\r\n                                        </label>\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    this.state.bad_password ?\r\n                                        <label>\r\n                                            <input type=\"password\" placeholder=\"Password\" ref={this.password}\r\n                                                   className={'is-invalid form-control'}\r\n                                                   onChange={() => this.setState({bad_password: false})}/>\r\n                                            <br/>\r\n                                            <span className={'error_message'}>Incorrect Password</span>\r\n                                        </label>\r\n                                        :\r\n                                        <label>\r\n                                            <input type=\"password\" className={'form-control'} placeholder=\"Password\"\r\n                                                   ref={this.password}/>\r\n                                        </label>\r\n                                }\r\n\r\n                            </div>\r\n                            {\r\n                                this.state.bad_credentials &&\r\n                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                    Incorrect Login Or Password\r\n                                </div>\r\n                            }\r\n                            <div>\r\n                                <button>Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, {Component} from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport '../styles/register.css'\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from \"../components/Header\";\r\nimport AuthorizationHandleService from \"../services/AuthorizationHandleService\";\r\nimport LocalStorageHelper from \"../services/LocalStorageHelper\";\r\nimport RefExtractor from \"../services/RefExtractor\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    bad_username: boolean;\r\n    bad_password: boolean;\r\n    bad_name: boolean;\r\n    bad_repeat_password: boolean;\r\n    err_msg?: string\r\n}\r\n\r\n\r\nclass RegisterPage extends Component<IProps, IState> {\r\n\r\n    private username = React.createRef<HTMLInputElement>();\r\n    private password = React.createRef<HTMLInputElement>();\r\n    private repeat_password = React.createRef<HTMLInputElement>();\r\n    private name = React.createRef<HTMLInputElement>();\r\n\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            bad_name: false,\r\n            bad_password: false,\r\n            bad_username: false,\r\n            bad_repeat_password: false\r\n        }\r\n    }\r\n\r\n    private handleSubmit = async (\r\n        e: React.FormEvent<HTMLFormElement>\r\n    ): Promise<void> => {\r\n        e.preventDefault();\r\n        const endpoint = \"http://localhost:8080/users\";\r\n\r\n        let username: string = RefExtractor.exctractRef(this.username);\r\n        let password: string = RefExtractor.exctractRef(this.password);\r\n        let repeat_password: string = RefExtractor.exctractRef(this.repeat_password);\r\n        let name: string = RefExtractor.exctractRef(this.name);\r\n\r\n        if (!this.isFormValid(username, password, repeat_password, name)) {\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            username: username,\r\n            password: password,\r\n            name: name\r\n        }\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            this.props.history.push(\"/login\");\r\n        }).catch((error) => {\r\n            if (error.response.data.errorCode === '40026') {\r\n                this.setState({err_msg: 'User with so username already exists'})\r\n            }\r\n            if (error.response.data.errorCode === '40019') {\r\n                this.setState({err_msg: error.response.data.message})\r\n            }\r\n            console.log(\"login error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.handleSubmit(e),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n\r\n    };\r\n\r\n    private isFormValid(username: string, password: string, repeat_password: string, name: string): boolean {\r\n        let result = true;\r\n        if (!username || username === '' || username.length < 3 || username.length > 30) {\r\n            this.setState({bad_username: true})\r\n            result = false;\r\n        }\r\n\r\n        if (!password || password === '' || password.length < 4 || password.length > 30) {\r\n            this.setState({bad_password: true});\r\n            result = false;\r\n        }\r\n        if (!repeat_password || repeat_password === '' || password !== repeat_password) {\r\n            this.setState({bad_repeat_password: true});\r\n            result = false;\r\n        }\r\n        if (name && (/\\s/.test(name) || name.length > 20)) {\r\n            this.setState({bad_name: true});\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header cartItems={LocalStorageHelper.calcItemCount()}/>\r\n                <main className={'mt-5 pt-5 register_container'}>\r\n                    <div className=\"register_container\">\r\n                        <div className=\"logo_container\">\r\n                            <span>Register</span>\r\n                        </div>\r\n                        {\r\n                            this.state.err_msg &&\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {this.state.err_msg}\r\n                            </div>\r\n                        }\r\n                        <div className=\"inputs_container\">\r\n                            <form onSubmit={this.handleSubmit} noValidate={true}>\r\n                                <div className=\"first_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"login_name\">Login Name</label>\r\n                                        {\r\n                                            this.state.bad_username ?\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_username: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"login_name\" ref={this.username}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        {\r\n                                            this.state.bad_password ?\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"password\" ref={this.password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"second_column\">\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"name\">Your Name</label>\r\n                                        {\r\n                                            this.state.bad_name ?\r\n                                                <input type=\"text\" id=\"name\" ref={this.name}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_name: false})}/>\r\n                                                :\r\n                                                <input type=\"text\" id=\"name\" ref={this.name}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <label htmlFor=\"repeat_password\">Repeat Password</label>\r\n                                        {\r\n                                            this.state.bad_repeat_password ?\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control is-invalid'}\r\n                                                       onChange={() => this.setState({bad_repeat_password: false})}/>\r\n                                                :\r\n                                                <input type=\"password\" id=\"repeat_password\" ref={this.repeat_password}\r\n                                                       className={'form-control'}/>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <div className=\"btn_holder\">\r\n                                            <button className=\"transparent_bg\" type={'reset'}>Cancel</button>\r\n                                            <button className=\"green_bg\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPage);","export default class Parser {\r\n    static dateParseString(cell: Date) {\r\n        return '' + cell.getFullYear() + '-' + (cell.getMonth() + 1) + '-' + cell.getDay() + ' ' + cell.getHours() + ':' + cell.getMinutes();\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Alert, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n    showCreateOrEditModal: boolean;\r\n    toggle: any;\r\n    writeOrEditCaption?: string\r\n    editName: string;\r\n    editDescription: string;\r\n    editPrice: number;\r\n    editDuration: number;\r\n    editTags: string[];\r\n    onNameChange: any;\r\n    onDescriptionChange: any;\r\n    onPriceChange: any;\r\n    onDurationChange: any;\r\n    onTagAdd: any;\r\n    onTagDelete: any;\r\n    handleCreateOrEdit: any;\r\n    errText?: string | null;\r\n    wrongEditName: boolean;\r\n    wrongEditDescription: boolean;\r\n}\r\n\r\n\r\ninterface IState {\r\n}\r\n\r\nclass CreateOrEditModal extends Component<IProps, IState> {\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.showCreateOrEditModal} toggle={() => this.props.toggle()}>\r\n                <ModalHeader toggle={() => this.props.toggle()}>\r\n                    <h5 className=\"modal-title\" id=\"editModalLabel\">\r\n                        {\r\n                            this.props.writeOrEditCaption &&\r\n                            <span>{this.props.writeOrEditCaption}</span>\r\n                        } certificate\r\n                    </h5>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    {\r\n                        this.props.errText &&\r\n                        <Alert color=\"warning\">\r\n                            {this.props.errText}\r\n                        </Alert>\r\n                    }\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        {\r\n                            this.props.wrongEditName ?\r\n                                <input type=\"text\" className=\"form-control is-invalid\" placeholder=\"Enter Name\"\r\n                                       value={this.props.editName}\r\n                                       onChange={event => this.props.onNameChange(event)}\r\n                                       id=\"name\"/>\r\n                                :\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Name\"\r\n                                       value={this.props.editName}\r\n                                       onChange={event => this.props.onNameChange(event)}\r\n                                       id=\"name\"/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"description\">Description:</label>\r\n                        {\r\n                            this.props.wrongEditDescription ?\r\n                                <textarea className=\"form-control is-invalid\" rows={5} id=\"description\"\r\n                                          value={this.props.editDescription}\r\n                                          onChange={event => this.props.onDescriptionChange(event)}\r\n                                          placeholder={\"Enter Description\"}/>\r\n                                :\r\n                                <textarea className=\"form-control\" rows={5} id=\"description\"\r\n                                          value={this.props.editDescription}\r\n                                          onChange={event => this.props.onDescriptionChange(event)}\r\n                                          placeholder={\"Enter Description\"}/>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        {\r\n                            isNaN(this.props.editPrice) ?\r\n                                <input type=\"number\" step={'any'} className=\"form-control is-invalid\"\r\n                                       value={this.props.editPrice}\r\n                                       placeholder=\"Enter Price\"\r\n                                       min={0}\r\n                                       onChange={event => this.props.onPriceChange(event)}\r\n                                       id=\"price\"/>\r\n                                :\r\n                                <input type=\"number\" step={'any'} className=\"form-control\"\r\n                                       value={this.props.editPrice}\r\n                                       placeholder=\"Enter Price\"\r\n                                       min={0}\r\n                                       onChange={event => this.props.onPriceChange(event)}\r\n                                       id=\"price\"/>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"duration\">Duration</label>\r\n                        {\r\n                            isNaN(this.props.editDuration) ?\r\n                                <input type=\"number\" className=\"form-control is-invalid\" placeholder=\"Enter Duration\"\r\n                                       value={this.props.editDuration}\r\n                                       min={0}\r\n                                       onChange={event => this.props.onDurationChange(event)}\r\n                                       id=\"duration\"/>\r\n                                :\r\n                                <input type=\"number\" className=\"form-control\" placeholder=\"Enter Duration\"\r\n                                       value={this.props.editDuration}\r\n                                       min={0}\r\n                                       onChange={event => this.props.onDurationChange(event)}\r\n                                       id=\"duration\"/>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group text-left\">\r\n                        <ChipInput\r\n                            label={'Tags'}\r\n                            value={this.props.editTags}\r\n                            onAdd={chip => this.props.onTagAdd(chip)}\r\n                            onDelete={chip => this.props.onTagDelete(chip)}\r\n                        />\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.toggle()}>\r\n                        Close\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-primary\"\r\n                            onClick={event => this.props.handleCreateOrEdit(event)}>\r\n                        {\r\n                            this.props.writeOrEditCaption &&\r\n                            <span>{this.props.writeOrEditCaption}</span>\r\n                        }\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateOrEditModal);","import React, {Component} from \"react\";\r\nimport Parser from \"../../services/Parser\";\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport Certificate from \"../../entity/Certificate\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n    currentItem?: Certificate | null;\r\n    showModal: boolean;\r\n    toggle: any;\r\n}\r\n\r\nclass ViewModal extends Component<IProps, any> {\r\n    render() {\r\n        return (\r\n\r\n            <Modal isOpen={this.props.showModal} toggle={() => this.props.toggle()}>\r\n                <ModalHeader toggle={() => this.props.toggle()}>\r\n                    <h5 className=\"modal-title\" id=\"viewModalLabel\">\r\n                        View certificate\r\n                    </h5>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">Name</th>\r\n                            <td>{this.props.currentItem?.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Description</th>\r\n                            <td>{this.props.currentItem?.description}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Price</th>\r\n                            <td>{this.props.currentItem?.price}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Duration</th>\r\n                            <td>{this.props.currentItem?.duration}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th scope=\"row\">Created</th>\r\n                            <td>\r\n                                {\r\n                                    this.props.currentItem &&\r\n                                    <span>{Parser.dateParseString(this.props.currentItem.createDate)}</span>\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Updated</th>\r\n                            <td>\r\n                                {\r\n                                    this.props.currentItem &&\r\n                                    <span>{Parser.dateParseString(this.props.currentItem.lastUpdateDate)}</span>\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th scope=\"row\">Tags</th>\r\n                            <td className={'d-flex flex-wrap'}>\r\n                                {\r\n                                    this.props.currentItem &&\r\n                                    this.props.currentItem.tags.map((value, index) => (\r\n                                        <span className={'ml-1'}>\r\n                                                            <Link to={'/?tagNames=' + value}>\r\n                                                                #{value}\r\n                                                            </Link>\r\n                                                        </span>\r\n                                    ))\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.toggle()}>\r\n                        Close\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ViewModal);","import React, {Component} from \"react\";\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Certificate from \"../../entity/Certificate\";\r\nimport axios from \"axios\";\r\nimport AuthorizationHandleService from \"../../services/AuthorizationHandleService\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport LocalStorageHelper from \"../../services/LocalStorageHelper\";\r\nimport Parser from \"../../services/Parser\";\r\nimport CreateOrEditModal from \"../../components/modals/CreateOrEditModal\";\r\nimport ViewModal from \"../../components/modals/ViewModal\";\r\nimport QueryUrlParamHelper from \"../../services/QueryUrlParamHelper\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\n\r\ninterface IState {\r\n    items: Certificate[];\r\n\r\n    tagNames: string[];\r\n    sort?: string;\r\n\r\n    partName: string;\r\n    partDescription: string;\r\n    pageSize: number;\r\n    pageNumber: number;\r\n\r\n    itemCount?: number;\r\n    totalPageCount: number;\r\n    currentItem?: Certificate | null;\r\n    err_msg?: string;\r\n\r\n    editName: string;\r\n    editDescription: string;\r\n    editPrice: number;\r\n    editDuration: number;\r\n    editTags: string[];\r\n\r\n    writeOrEditCaption?: string;\r\n    showCreateOrEditModal: boolean;\r\n    showViewModal: boolean;\r\n    filterString: string[];\r\n    wrongEditName: boolean;\r\n    wrongEditDescription: boolean;\r\n    errModalText?: string | null;\r\n}\r\n\r\nconst MAX_DESCRIPTION_LENGTH = 500;\r\nconst MAX_TAG_LENGTH = 255;\r\nconst MAX_CERTIFICATE_NAME_LENGTH = 255;\r\n\r\nclass CertificatesAdminPage extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            editDescription: \"\",\r\n            editDuration: 0,\r\n            editName: \"\",\r\n            editPrice: 0,\r\n            editTags: [],\r\n\r\n            items: [],\r\n            partName: '',\r\n            partDescription: '',\r\n            pageNumber: 1,\r\n            pageSize: 5,\r\n            totalPageCount: 1000,\r\n            tagNames: [],\r\n            sort: 'LAST_UPDATE:desc',\r\n            filterString: [],\r\n            showCreateOrEditModal: false,\r\n            showViewModal: false,\r\n            wrongEditName: false,\r\n            wrongEditDescription: false,\r\n        }\r\n    }\r\n\r\n\r\n    private columns = [{\r\n        dataField: '_lastUpdateDate',\r\n        text: 'Update date',\r\n        sort: true,\r\n        formatter: CertificatesAdminPage.dateFormatter,\r\n        sortFunc: (a: Date, b: Date, order, dataField, rowA, rowB) => {\r\n            function compareDates(a: Date, b: Date) {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n\r\n            if (order === 'asc') {\r\n                return compareDates(a, b);\r\n            } else {\r\n                return compareDates(b, a);\r\n            }\r\n        },\r\n        onSort: (field, order) => {\r\n            this.setState({sort: 'LAST_UPDATE:' + order}, () => this.filter())\r\n        }\r\n    }, {\r\n        dataField: '_name',\r\n        text: 'Name',\r\n        sort: true,\r\n        onSort: (field, order) => {\r\n            this.setState({sort: 'NAME:' + order}, () => this.filter())\r\n        }\r\n    }, {\r\n        dataField: '_tags',\r\n        text: 'Tags',\r\n        formatter: CertificatesAdminPage.tagsFormatter\r\n    }, {\r\n        dataField: '_description',\r\n        text: 'Description',\r\n    }, {\r\n        dataField: '_price',\r\n        text: 'Price',\r\n    }, {\r\n        text: 'Actions',\r\n        formatter: (cell, row: Certificate) => {\r\n            return (\r\n                <div>\r\n                    <button className={'btn btn-primary'}\r\n                            onClick={() => this.setState({currentItem: row, showViewModal: true})}>\r\n                        View\r\n                    </button>\r\n                    <button className={'btn btn-success'}\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    currentItem: row,\r\n                                    editDescription: row.description,\r\n                                    editName: row.name,\r\n                                    editDuration: row.duration,\r\n                                    editPrice: row.price,\r\n                                    editTags: [...row.tags],\r\n                                    writeOrEditCaption: \"Edit\",\r\n                                    showCreateOrEditModal: true,\r\n                                    wrongEditName: false,\r\n                                    wrongEditDescription: false,\r\n                                    errModalText: null\r\n                                })\r\n                            }}\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => this.setState({currentItem: row})}\r\n                            className=\"btn btn-primary\"\r\n                            data-toggle=\"modal\" data-target=\"#deleteModal\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }];\r\n\r\n\r\n    componentDidMount() {\r\n        this.checkForAdmin();\r\n        this.loadResources(this.props.location.search);\r\n        this.buildSearch(this.props.location.search);\r\n    }\r\n\r\n\r\n    private static tagsFormatter(cell: string[], row) {\r\n        return (\r\n            <div className={'d-flex flex-wrap'}>{\r\n                cell.map((el, i) => (\r\n                    <span key={i} className={'mr-1'}>\r\n                         <Link to={'/?tagNames=' + el}>\r\n                             #{el}\r\n                         </Link>\r\n                    </span>\r\n                ))\r\n            }</div>\r\n        )\r\n    }\r\n\r\n    private static dateFormatter(cell: Date, row) {\r\n        return (\r\n            <div>{Parser.dateParseString(cell)}</div>\r\n        )\r\n    }\r\n\r\n\r\n    private buildSearch(location: string) {\r\n        const query = new URLSearchParams(location);\r\n        let tagNames = query.get('tagNames');\r\n        if (tagNames) {\r\n            this.setState({tagNames: tagNames.split(',')})\r\n        }\r\n        let pageSize = query.get('pageSize');\r\n        if (pageSize) {\r\n            this.setState({pageSize: Number.parseInt(pageSize)})\r\n        }\r\n        let pageNumber = query.get('pageNumber');\r\n        if (pageNumber) {\r\n            this.setState({pageNumber: Number.parseInt(pageNumber)})\r\n        }\r\n        let partName = query.get('partName');\r\n        console.log('partName in buildSearch = ' + partName)\r\n        if (partName) {\r\n            this.setState({partName: partName})\r\n        }\r\n        let partDescription = query.get('partDescription');\r\n        if (partDescription) {\r\n            this.setState({partDescription: partDescription})\r\n        }\r\n        let sort = query.get('sort');\r\n        if (sort) {\r\n            this.setState({sort: sort})\r\n        }\r\n    }\r\n\r\n    private loadResources(location: string) {\r\n        const endpoint = \"http://localhost:8080/certificates\" + location;\r\n        console.log(\"loadResources, location = \" + location);\r\n\r\n        axios.get(endpoint).then(res => {\r\n            let data = res.data.items;\r\n            let totalPageCount = res.data.totalPageCount;\r\n            console.log(\"data = \" + data)\r\n            console.log(\"totalPageCount = \" + totalPageCount)\r\n            let list: Certificate[] = Certificate.parseCertificateList(data);\r\n            this.setState({items: list, totalPageCount: totalPageCount});\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.loadResources(location),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'bg-light'}>\r\n                <Header cartItems={LocalStorageHelper.calcItemCount()}/>\r\n                <main className={'mt-5 pt-5'}>\r\n                    <div className=\"container\">\r\n                        <div className=\"text-center my-5 d-flex align-content-end justify-content-center\">\r\n                            <ChipInput\r\n                                label={'Filter'}\r\n                                value={this.filterValue()}\r\n                                onAdd={chip => {\r\n                                    const pattern = new RegExp(\"^(#\\\\().+\\\\)$\")\r\n                                    if (chip.match(pattern)) {\r\n                                        this.setState(prev => ({tagNames: [...prev.tagNames, chip.substr(2, chip.length - 3)]}))\r\n                                    } else {\r\n                                        this.setState({partName: chip})\r\n                                    }\r\n                                }}\r\n                                onDelete={chip => {\r\n                                    const pattern = new RegExp(\"^(#\\\\().+\\\\)$\");\r\n                                    if (chip.match(pattern)) {\r\n                                        this.setState({\r\n                                            tagNames: this.state.tagNames.filter((e) => e !== chip.substr(2, chip.length - 3))\r\n                                        })\r\n                                    } else {\r\n                                        this.setState({partName: ''})\r\n                                    }\r\n\r\n                                }}\r\n                            />\r\n                            <div className={'ml-3 d-flex'}>\r\n                                <button className={'btn btn-primary align-self-end'}\r\n                                        onClick={() => this.filter()}>\r\n                                    Filter\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className={'btn btn-primary'}\r\n                                    onClick={() => {\r\n                                        this.setState({currentItem: null})\r\n                                        this.setState({\r\n                                            editDescription: '',\r\n                                            editName: '',\r\n                                            editDuration: 0,\r\n                                            editPrice: 0,\r\n                                            editTags: [],\r\n                                            writeOrEditCaption: \"Create\",\r\n                                            showCreateOrEditModal: true,\r\n                                            wrongEditName: false,\r\n                                            wrongEditDescription: false,\r\n                                            errModalText: null\r\n                                        })\r\n                                    }}\r\n                            >\r\n                                Create\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.err_msg &&\r\n                        <div className=\"alert alert-warning\" role=\"alert\">\r\n                            {this.state.err_msg}\r\n                        </div>\r\n                    }\r\n\r\n                    <div className={'filter__part'}>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"table__content m-5\">\r\n                        <BootstrapTable bootstrap4={true} keyField='id' data={this.state.items}\r\n                                        columns={this.columns}/>\r\n                    </div>\r\n\r\n                    <Pagination pageNumber={this.state.pageNumber} pageSize={this.state.pageSize}\r\n                                totalPageCount={this.state.totalPageCount}\r\n                                onClickPagination={(event, input) => this.onClickPagination(event, input)}\r\n                                changePageSize={event => this.changePageSize(event)}/>\r\n\r\n                    <div className=\"modal fade\" id=\"deleteModal\" tabIndex={-1} role=\"dialog\"\r\n                         aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"deleteModalLabel\">Delete certificate</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <span>Are you sure you want to delete certificate with name </span>\r\n                                    {\r\n                                        this.state.currentItem &&\r\n                                        <span>{this.state.currentItem.name}</span>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                            onClick={event => this.handleDeleteItem(event)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <CreateOrEditModal\r\n                        editTags={this.state.editTags}\r\n                        editDescription={this.state.editDescription}\r\n                        editDuration={this.state.editDuration}\r\n                        editName={this.state.editName}\r\n                        editPrice={this.state.editPrice}\r\n                        showCreateOrEditModal={this.state.showCreateOrEditModal}\r\n                        writeOrEditCaption={this.state.writeOrEditCaption}\r\n                        toggle={() => this.toggleCreateOrEditModal()}\r\n                        onNameChange={event => {\r\n                            if (event.target.value.length <= MAX_CERTIFICATE_NAME_LENGTH) {\r\n                                this.setState({editName: event.target.value, wrongEditName: false})\r\n                            }\r\n                        }}\r\n                        onDescriptionChange={event => {\r\n                            if (event.target.value.length <= MAX_DESCRIPTION_LENGTH) {\r\n                                this.setState({editDescription: event.target.value, wrongEditDescription: false})\r\n                            }\r\n                        }}\r\n                        onPriceChange={event => {\r\n                            console.log(\"price = \", Number.parseFloat(event.target.value))\r\n                            this.setState({editPrice: Number.parseFloat(event.target.value)})\r\n                        }}\r\n                        onDurationChange={event => this.setState({editDuration: Number.parseFloat(event.target.value)})}\r\n                        onTagAdd={chip => {\r\n                            if (chip.length < MAX_TAG_LENGTH) {\r\n                                this.setState(prev => ({\r\n                                    editTags: [...prev.editTags, chip]\r\n                                }))\r\n                            }\r\n                        }}\r\n                        onTagDelete={chip => this.setState({\r\n                            editTags: this.state.editTags.filter((e) => e !== chip)\r\n                        })}\r\n                        handleCreateOrEdit={event => this.handleCreateOrEdit(event)}\r\n                        wrongEditName={this.state.wrongEditName}\r\n                        wrongEditDescription={this.state.wrongEditDescription}\r\n                        errText={this.state.errModalText}\r\n                    />\r\n\r\n\r\n                    <ViewModal currentItem={this.state.currentItem} showModal={this.state.showViewModal}\r\n                               toggle={() => this.toggleViewModal()}/>\r\n                </main>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n\r\n    private toggleCreateOrEditModal() {\r\n        this.setState(prev => ({\r\n            showCreateOrEditModal: !prev.showCreateOrEditModal\r\n        }));\r\n    }\r\n\r\n    private toggleViewModal() {\r\n        this.setState(prev => ({\r\n            showViewModal: !prev.showViewModal\r\n        }));\r\n    }\r\n\r\n    private handleDeleteItem(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (this.state.currentItem) {\r\n\r\n            const endpoint = \"http://localhost:8080/certificates/\" + this.state.currentItem.id;\r\n\r\n            axios.delete(endpoint).then(() => {\r\n                this.filter();\r\n            }).catch((error) => {\r\n                if (error.response.data.errorCode === '4044') {\r\n                    this.setState({err_msg: 'Certificate not already deleted'})\r\n                }\r\n                console.log(\"error = \" + error);\r\n                AuthorizationHandleService.handleTokenExpired(\r\n                    error,\r\n                    () => this.handleDeleteItem(event),\r\n                    () => window.location.reload()\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    private changePageSize(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState(() => (({pageNumber: 1, pageSize: Number.parseInt(event.target.value)})),\r\n            () => this.filter());\r\n    }\r\n\r\n    private onClickPagination(event: React.MouseEvent<HTMLAnchorElement>, input: number) {\r\n        event.preventDefault();\r\n        console.log(\"onclick pagination = \" + input)\r\n        this.setState({pageNumber: input}, () => this.filter());\r\n    }\r\n\r\n    private filter() {\r\n        if (this.checkForAdmin()) {\r\n            return;\r\n        }\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partName, 'partName');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.partDescription, 'partDescription');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageNumber, 'pageNumber');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageSize, 'pageSize');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.sort, 'sort');\r\n        QueryUrlParamHelper.setParamQueryArray(query, this.state.tagNames, 'tagNames');\r\n        let path = \"?\" + query.toString();\r\n        this.props.history.replace(path);\r\n        this.loadResources(path);\r\n        this.buildSearch(path);\r\n    }\r\n\r\n    private handleCreateOrEdit(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (!this.validateCreateOrEdit()) {\r\n            return;\r\n        }\r\n        if (this.state.currentItem) {\r\n            this.edit(event);\r\n        } else {\r\n            this.create(event);\r\n        }\r\n    }\r\n\r\n    private edit(event: React.MouseEvent<HTMLButtonElement>) {\r\n        if (this.state.currentItem) {\r\n\r\n            const endpoint = 'http://localhost:8080/certificates/' + this.state.currentItem.id;\r\n            let data = {\r\n                name: this.state.editName,\r\n                description: this.state.editDescription,\r\n                price: this.state.editPrice,\r\n                duration: this.state.editDuration,\r\n                tags: this.state.editTags.map(value => {\r\n                    return {\r\n                        name: value\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n            axios.patch(endpoint,\r\n                data\r\n            ).then(() => {\r\n                this.setState({showCreateOrEditModal: false}, () => this.filter());\r\n            }).catch((error) => {\r\n                AuthorizationHandleService.handleTokenExpired(\r\n                    error,\r\n                    () => this.edit(event),\r\n                    () => window.location.reload()\r\n                )\r\n                if (error.response && error.response.data) {\r\n                    if (error.response.data.errorCode === '4008') {\r\n                        this.setState({errModalText: 'Gift certificate with so name already exists'})\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private create(event: React.MouseEvent<HTMLButtonElement>) {\r\n\r\n        const endpoint = 'http://localhost:8080/certificates';\r\n        let data = {\r\n            name: this.state.editName,\r\n            description: this.state.editDescription,\r\n            price: this.state.editPrice,\r\n            duration: this.state.editDuration,\r\n            tags: this.state.editTags.map(value => {\r\n                return {\r\n                    name: value\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            this.setState({pageNumber: 1, showCreateOrEditModal: false}, () => this.filter());\r\n        }).catch((error) => {\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.create(event),\r\n                () => window.location.reload()\r\n            )\r\n            if (error.response && error.response.data) {\r\n                if (error.response.data.errorCode === '4003') {\r\n                    this.setState({errModalText: 'Gift certificate with so name already exists'})\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private filterValue() {\r\n        let tags = this.state.tagNames.map(el => '#(' + el + ')');\r\n        if (this.state.partName && this.state.partName !== '') {\r\n            return [this.state.partName, ...tags];\r\n        } else {\r\n            return [...tags];\r\n        }\r\n    }\r\n\r\n    private checkForAdmin(): boolean {\r\n        let item = localStorage.getItem('role');\r\n        if (item !== 'ADMIN') {\r\n            this.props.history.push('/login');\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private validateCreateOrEdit(): boolean {\r\n        let result = true;\r\n        if (this.state.editName === '') {\r\n            this.setState({wrongEditName: true})\r\n            result = false;\r\n        }\r\n        if (this.state.editDescription === '') {\r\n            this.setState({wrongEditDescription: true})\r\n            result = false;\r\n        }\r\n\r\n        if (isNaN(this.state.editPrice) || isNaN(this.state.editDuration)) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default withRouter(CertificatesAdminPage);","import React, {Component} from \"react\";\r\nimport Certificate from \"../entity/Certificate\";\r\n\r\n\r\ninterface IProps {\r\n    certificate: Certificate;\r\n    size: number;\r\n    onMinus: any;\r\n    onPlus: any;\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport default class CouponComp extends Component<IProps, IState> {\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.certificate) {\r\n            return (\r\n                <div className=\"coupon row mb-3\">\r\n                    <div className=\"details col-8\">\r\n                        <div className=\"coupon_name\">{this.props.certificate.name}</div>\r\n                        <div className=\"coupon_description\">{this.props.certificate.description.substr(0, 100)}</div>\r\n                    </div>\r\n                    <div className={'row col-4'}>\r\n                        <div className={'minus__plus d-flex align-items-center mr-5 justify-content-end'}>\r\n                            <button className={'btn btn-outline-secondary'}\r\n                                    onClick={() => this.props.onMinus()}>\r\n                                -\r\n                            </button>\r\n                            <span className={'mx-2'}>{this.props.size}</span>\r\n                            <button className={'btn btn-outline-secondary'}\r\n                                    onClick={() => this.props.onPlus()}>\r\n                                +\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            <div\r\n                                className=\"price\">${Math.round((this.props.certificate.price * this.props.size) * 100) / 100}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"coupon\">\r\n                    <div className=\"details\">\r\n                        <div className=\"coupon_name\"/>\r\n                        <div className=\"coupon_description\"/>\r\n                        <div className={'minus__plus d-flex align-items-center mr-5'}>\r\n                            <button className={'btn btn-outline-secondary'}>-</button>\r\n                            <span className={'mx-2'}>{this.props.size}</span>\r\n                            <button className={'btn btn-outline-secondary'}>+</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                        <div className=\"price\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport '../../styles/checkout.css'\r\nimport Certificate from \"../../entity/Certificate\";\r\nimport LocalStorageHelper from \"../../services/LocalStorageHelper\";\r\nimport CouponComp from \"../../components/CouponComp\";\r\nimport axios from \"axios\";\r\nimport AuthorizationHandleService from \"../../services/AuthorizationHandleService\";\r\n\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    coupons: Map<Certificate, number>;\r\n}\r\n\r\n\r\nclass BasketPage extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            coupons: new Map([])\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let basket = Array.from(LocalStorageHelper.getBasket().entries())\r\n        console.log('basket comp did mount = ' + JSON.stringify(basket))\r\n        let resultBasket: Map<Certificate, number> = new Map([]);\r\n        for (let i = 0; i < basket.length; i++) {\r\n            await this.buildItem(resultBasket, basket[i][0], basket[i][1]);\r\n        }\r\n        this.setState({coupons: resultBasket})\r\n        console.log(\"resultBasket = \" + JSON.stringify(Array.from(resultBasket.entries())))\r\n    }\r\n\r\n    async buildItem(resultBasket: Map<Certificate, number>, id: number, size: number) {\r\n        const endpoint = \"http://localhost:8080/certificates/\" + id;\r\n        await axios.get(endpoint).then(res => {\r\n            let data = res.data;\r\n            resultBasket.set(Certificate.parse(data), size)\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.buildItem(resultBasket, id, size),\r\n                () => window.location.reload()\r\n            )\r\n            if (error.response && error.response.data) {\r\n                if (error.response.data.errorCode === '4044') {\r\n                    LocalStorageHelper.removeAllItemBasket(id);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className={'mt-5 pt-2'}/>\r\n                <div className=\"header_line\">\r\n                    <span>\r\n                        Basket\r\n                    </span>\r\n                </div>\r\n\r\n                <main className={'checkout'}>\r\n                    <div className=\"main_container\">\r\n                        <div className=\"coupons mt-5\">\r\n\r\n                            {\r\n                                this.state.coupons.size === 0 &&\r\n                                <h1 className={'container my-5 py-5'}>\r\n                                    You have not certificates in your basket\r\n                                </h1>\r\n                            }\r\n\r\n                            {\r\n                                Array.from(this.state.coupons.entries()).map((value, index) => (\r\n                                    <CouponComp key={index} certificate={value[0]} size={value[1]}\r\n                                                onMinus={() => this.onMinus(value)}\r\n                                                onPlus={() => this.onPlus(value)}/>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"line\"/>\r\n                        <div className=\"total_container\">\r\n                            <div className=\"total\">\r\n                                <span>Total</span>\r\n                                <span>${\r\n                                    Array.from(this.state.coupons.entries())\r\n                                        .map(value => Math.round((value[0].price * value[1]) * 100)/100)\r\n                                        .reduce((p, c) => Math.round((p + c) * 100)/100, 0)\r\n                                }</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn_container\">\r\n                            <div className=\"btn_place\">\r\n                                <button className=\"btn transparent_bg\"\r\n                                        onClick={() => {\r\n                                            this.props.history.push('/');\r\n                                        }}>\r\n                                    Back\r\n                                </button>\r\n                                {\r\n                                    this.state.coupons.size === 0 ?\r\n                                        <button className=\"btn green_bg disabled\">\r\n                                            Save\r\n                                        </button>\r\n                                        :\r\n                                        <button className=\"btn green_bg\" onClick={() => this.onFormSubmit()}>\r\n                                            Save\r\n                                        </button>\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private onMinus(value: [Certificate, number]) {\r\n        LocalStorageHelper.removeItemBasket(value[0].id);\r\n        let copyMap = new Map(this.state.coupons.entries());\r\n        if (value[1] - 1 < 1) {\r\n            copyMap.delete(value[0])\r\n            this.setState({coupons: copyMap});\r\n        } else {\r\n            copyMap.set(value[0], value[1] - 1)\r\n            this.setState({\r\n                coupons: copyMap\r\n            });\r\n        }\r\n    }\r\n\r\n    private onPlus(value: [Certificate, number]) {\r\n        LocalStorageHelper.putItemBasket(value[0].id);\r\n        let copyMap = new Map(this.state.coupons.entries());\r\n        copyMap.set(value[0], value[1] + 1)\r\n        this.setState({\r\n            coupons: copyMap\r\n        })\r\n    }\r\n\r\n    private onFormSubmit() {\r\n        const endpoint = \"http://localhost:8080/orders\";\r\n\r\n\r\n        let retCerts = Array.from(this.state.coupons.entries())\r\n            .map(value => {\r\n                return {\r\n                    id: value[0].id,\r\n                    count: value[1]\r\n                }\r\n            });\r\n        let role = LocalStorageHelper.getRole();\r\n        let data\r\n        if (role === 'ADMIN') {\r\n            data = {\r\n                userId: LocalStorageHelper.getUserId(),\r\n                giftCertificates: retCerts,\r\n            }\r\n        } else if (role === 'USER') {\r\n            data = {\r\n                giftCertificates: retCerts,\r\n            }\r\n        } else {\r\n            this.props.history.push('/login');\r\n            return;\r\n        }\r\n\r\n\r\n        axios.post(endpoint,\r\n            data\r\n        ).then(() => {\r\n            LocalStorageHelper.clearBasket();\r\n            this.props.history.push(\"/orders\");\r\n        }).catch((error) => {\r\n            if (error.response && error.response.data) {\r\n                if (error.response.data.errorCode === '40128') {\r\n                    this.props.history.push('/login');\r\n                }\r\n                if (error.response.data.errorCode === '4044') {\r\n                    window.location.reload();\r\n                }\r\n            }\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.onFormSubmit(),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n}\r\n\r\nexport default withRouter(BasketPage);\r\n","export default class Purchase {\r\n    certificateId: number | null;\r\n    priceForOne: number;\r\n    name: string;\r\n    count: number;\r\n\r\n    constructor(certificateId: number | null, priceForOne: number, name: string, count: number) {\r\n        this.certificateId = certificateId;\r\n        this.priceForOne = priceForOne;\r\n        this.name = name;\r\n        this.count = count;\r\n    }\r\n\r\n    static parseList(data: any): Purchase[] {\r\n        let list: Purchase[] = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            list.push(this.parse(data[i]))\r\n        }\r\n        return list;\r\n    }\r\n\r\n    private static parse(obj: any): Purchase {\r\n        return new Purchase(obj.certificateId, obj.priceForOne, obj.name, obj.count);\r\n    }\r\n}","import Purchase from \"./Purchase\";\r\n\r\nexport default class Order {\r\n    id: number;\r\n    createDate: Date;\r\n    price: number;\r\n    purchases: Purchase[];\r\n\r\n    constructor(id: number, createDate: Date, price: number, purchases: Purchase[]) {\r\n        this.id = id;\r\n        this.createDate = createDate;\r\n        this.price = price;\r\n        this.purchases = purchases;\r\n    }\r\n\r\n    static parseList(data: any) {\r\n        let list: Order[] = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            let obj = data[i];\r\n            list.push(Order.parse(obj));\r\n        }\r\n        return list;\r\n    }\r\n\r\n    static parse(obj: any): Order {\r\n        return new Order(obj.id, new Date(obj.createDate), obj.price, Purchase.parseList(obj.purchases));\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Link, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Order from \"../../entity/Order\";\r\nimport axios from \"axios\";\r\nimport AuthorizationHandleService from \"../../services/AuthorizationHandleService\";\r\nimport LocalStorageHelper from \"../../services/LocalStorageHelper\";\r\nimport Parser from \"../../services/Parser\";\r\nimport QueryUrlParamHelper from \"../../services/QueryUrlParamHelper\";\r\nimport Pagination from \"../../components/Pagination\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {\r\n}\r\n\r\ninterface IState {\r\n    orders: Order[];\r\n    totalPageCount: number;\r\n    pageSize: number;\r\n    pageNumber: number;\r\n}\r\n\r\nclass UserOrdersPage extends Component<IProps, IState> {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            totalPageCount: 0,\r\n            pageNumber: 1,\r\n            pageSize: 5,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadResource(this.props.location.search);\r\n        this.buildSearch(this.props.location.search);\r\n    }\r\n\r\n    private columns = [{\r\n        dataField: 'createDate',\r\n        text: 'Date of purchase',\r\n        formatter: (cell: Date, row) => {\r\n            return (\r\n                <div>{Parser.dateParseString(cell)}</div>\r\n            )\r\n        }\r\n    }, {\r\n        dataField: 'price',\r\n        text: 'Price',\r\n        formatter: (cell: Date, row) => {\r\n            return (\r\n                <div>${cell}</div>\r\n            )\r\n        }\r\n    },];\r\n    private expandRow = {\r\n        renderer: row => (\r\n            <div className={'container text-center'}>\r\n                <h2 className={'mb-3'}>Certificates:</h2>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Count</th>\r\n                        <th scope=\"col\">Price</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        row.purchases.map((el, index) => (\r\n                            <tr>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.count}</td>\r\n                                <td>${el.priceForOne * el.count}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        ),\r\n\r\n        showExpandColumn: true,\r\n        expandHeaderColumnRenderer: ({isAnyExpands}) => {\r\n            if (isAnyExpands) {\r\n                return <b>-</b>;\r\n            }\r\n            return <b>+</b>;\r\n        },\r\n        expandColumnRenderer: ({expanded}) => {\r\n            if (expanded) {\r\n                return (\r\n                    <b>-</b>\r\n                );\r\n            }\r\n            return (\r\n                <b>+</b>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className={'mt-5 pt-5'}/>\r\n                <main>\r\n                    <div className=\"container\">\r\n                        <div className={'text-center mb-5'}>\r\n                            {\r\n                                LocalStorageHelper.getName() ?\r\n                                    <div>\r\n                                        <h1>Hello, <span>{LocalStorageHelper.getName()}</span></h1>\r\n                                        <h1>This is your orders:</h1>\r\n                                    </div>\r\n                                    :\r\n                                    <h1>Orders</h1>\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            this.state.orders.length === 0 ?\r\n                                <div>\r\n                                    <BootstrapTable bootstrap4={true} keyField='id'\r\n                                                    data={this.state.orders}\r\n                                                    columns={this.columns}\r\n                                                    expandRow={this.expandRow}\r\n                                    />\r\n                                    <div className={'text-center my-5 py-5'}>\r\n                                        <h5>\r\n                                            You have not any orders yet\r\n                                        </h5>\r\n                                        <h5>\r\n                                            You can <Link to={'/'}>make them</Link>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <Pagination pageNumber={this.state.pageNumber} pageSize={this.state.pageSize}\r\n                                                totalPageCount={this.state.totalPageCount}\r\n                                                onClickPagination={(event, input) => this.onClickPagination(event, input)}\r\n                                                changePageSize={(event) => this.changePageSize(event)}/>\r\n                                </div>\r\n                                :\r\n                                <div className={'mb-4'}>\r\n                                    <BootstrapTable bootstrap4={true} keyField='id'\r\n                                                    data={this.state.orders}\r\n                                                    columns={this.columns}\r\n                                                    expandRow={this.expandRow}\r\n                                    />\r\n                                    <Pagination pageNumber={this.state.pageNumber} pageSize={this.state.pageSize}\r\n                                                totalPageCount={this.state.totalPageCount}\r\n                                                onClickPagination={(event, input) => this.onClickPagination(event, input)}\r\n                                                changePageSize={(event) => this.changePageSize(event)}/>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    private buildSearch(location: string) {\r\n        const query = new URLSearchParams(location);\r\n        let pageSize = query.get('pageSize');\r\n        if (pageSize) {\r\n            this.setState({pageSize: Number.parseInt(pageSize)})\r\n        }\r\n        let pageNumber = query.get('pageNumber');\r\n        if (pageNumber) {\r\n            this.setState({pageNumber: Number.parseInt(pageNumber)})\r\n        }\r\n    }\r\n\r\n    private loadResource(search) {\r\n        let role = LocalStorageHelper.getRole();\r\n        if (role === null) {\r\n            this.props.history.push('/login');\r\n        } else if (role === 'ADMIN') {\r\n            this.loadAdmin(search);\r\n        }\r\n        if (role === 'USER') {\r\n            this.loadUser(search);\r\n        }\r\n    }\r\n\r\n    private loadAdmin(search: any) {\r\n        console.log('loadAdmin')\r\n\r\n        const endpoint = \"http://localhost:8080/orders?userId=\" + LocalStorageHelper.getUserId() + '&' + search;\r\n\r\n        axios.get(endpoint).then(res => {\r\n            let data = res.data.items;\r\n            let totalPageCount = res.data.totalPageCount;\r\n            let arr: Order[] = Order.parseList(data);\r\n            this.setState({orders: arr, totalPageCount: totalPageCount});\r\n            console.log('list = ', arr)\r\n            console.log('totalPageCount = ', totalPageCount)\r\n            console.log('success');\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.loadResource(this.props.location.search),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    private loadUser(search: any) {\r\n        const endpoint = \"http://localhost:8080/orders?\" + search;\r\n\r\n        axios.get(endpoint).then(res => {\r\n            let data = res.data.items;\r\n            let totalPageCount = res.data.totalPageCount;\r\n            let arr: Order[] = Order.parseList(data);\r\n            this.setState({orders: arr, totalPageCount: totalPageCount});\r\n        }).catch((error) => {\r\n            console.log(\"error = \" + error);\r\n            AuthorizationHandleService.handleTokenExpired(\r\n                error,\r\n                () => this.loadResource(this.props.location.search),\r\n                () => window.location.reload()\r\n            )\r\n        });\r\n    }\r\n\r\n    private changePageSize(event: React.ChangeEvent<HTMLSelectElement>) {\r\n        this.setState(() => (({pageNumber: 1, pageSize: Number.parseInt(event.target.value)})),\r\n            () => this.filter());\r\n    }\r\n\r\n    private filter() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageNumber, 'pageNumber');\r\n        QueryUrlParamHelper.setParamQuery(query, this.state.pageSize, 'pageSize');\r\n        let path = query.toString();\r\n        this.props.history.replace(\"/orders?\" + path);\r\n        this.loadResource(path);\r\n        this.buildSearch('?' + path);\r\n    }\r\n\r\n\r\n    private onClickPagination(event: React.MouseEvent<HTMLAnchorElement>, input: number) {\r\n        event.preventDefault();\r\n        console.log(\"onclick pagination = \" + input)\r\n        this.setState({pageNumber: input}, () => this.filter());\r\n    }\r\n}\r\n\r\nexport default withRouter(UserOrdersPage);","import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport CertificatesAdminPage from \"./pages/admin/CertificatesAdminPage\";\r\nimport './Interceptors'\r\nimport Footer from \"./components/Footer\";\r\nimport CartPage from \"./pages/user/BasketPage\";\r\nimport BasketPage from \"./pages/user/BasketPage\";\r\nimport UserOrdersPage from \"./pages/user/UserOrdersPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Route exact path=\"/\">\r\n                    <MainPage/>\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    <LoginPage/>\r\n                </Route>\r\n                <Route exact path={'/admin/certificates'}>\r\n                    <CertificatesAdminPage/>\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <RegisterPage/>\r\n                </Route>\r\n                <Route exact path=\"/basket\">\r\n                    <BasketPage/>\r\n                </Route>\r\n                <Route exact path=\"/orders\">\r\n                    <UserOrdersPage/>\r\n                </Route>\r\n            </BrowserRouter>\r\n            {/*<Footer/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}